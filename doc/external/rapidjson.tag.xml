<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.9.7">
  <compound kind="file">
    <name>document.h</name>
    <path>include/rapidjson/</path>
    <filename>document_8h.html</filename>
    <includes id="reader_8h" name="reader.h" local="yes" imported="no">reader.h</includes>
    <class kind="class">rapidjson::GenericMember</class>
    <class kind="class">rapidjson::GenericMemberIterator</class>
    <class kind="struct">rapidjson::GenericStringRef</class>
    <class kind="class">rapidjson::GenericValue</class>
    <class kind="struct">rapidjson::GenericValue::Number::I</class>
    <class kind="struct">rapidjson::GenericValue::Number::U</class>
    <class kind="class">rapidjson::GenericDocument</class>
    <class kind="class">rapidjson::GenericArray</class>
    <class kind="class">rapidjson::GenericObject</class>
    <namespace>rapidjson</namespace>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_DEFAULT_ALLOCATOR</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga04a88f0b2db9091006eb7fc6deb6077b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_DEFAULT_STACK_ALLOCATOR</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga1178cffff7c596922a5ed3fda30c5520</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_VALUE_DEFAULT_OBJECT_CAPACITY</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga5c88aa612939b592d15d3fc4bdf54272</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_VALUE_DEFAULT_ARRAY_CAPACITY</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga10ba0ee06d0ac2803d0f2290d46b19f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericValue&lt; UTF8&lt;&gt; &gt;</type>
      <name>Value</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>aa65fc9fb381b2cbc54f98673eadd6505</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericDocument&lt; UTF8&lt;&gt; &gt;</type>
      <name>Document</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ace11b5b575baf1cccd5ba5f8586dcdc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>GenericStringRef&lt; CharType &gt;</type>
      <name>StringRef</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>aa6b9fd9f6aa49405a574c362ba9af6b5</anchor>
      <arglist>(const CharType *str)</arglist>
    </member>
    <member kind="function">
      <type>GenericStringRef&lt; CharType &gt;</type>
      <name>StringRef</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a578c51ab574a50a9c760b9da7c7562f2</anchor>
      <arglist>(const CharType *str, size_t length)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>error.h</name>
    <path>include/rapidjson/error/</path>
    <filename>error_8h.html</filename>
    <includes id="rapidjson_8h" name="rapidjson.h" local="yes" imported="no">../rapidjson.h</includes>
    <class kind="struct">rapidjson::ParseResult</class>
    <namespace>rapidjson</namespace>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_ERROR_CHARTYPE</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga7e4636fd48d0148f102b8a13f0539d8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_ERROR_STRING</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gabe2e1bd1349e5a7d6c1af78c05a98f0d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>const RAPIDJSON_ERROR_CHARTYPE *(*</type>
      <name>GetParseErrorFunc</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga71e87993751dbd0e3259d90194a265b3</anchor>
      <arglist>)(ParseErrorCode)</arglist>
    </member>
    <member kind="typedef">
      <type>const RAPIDJSON_ERROR_CHARTYPE *(*</type>
      <name>GetValidateErrorFunc</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gae6f45cf4e3ad85413823a368df05caed</anchor>
      <arglist>)(ValidateErrorCode)</arglist>
    </member>
    <member kind="typedef">
      <type>const RAPIDJSON_ERROR_CHARTYPE *(*</type>
      <name>GetSchemaErrorFunc</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga5d760d47c37dc058d90b18e699622bc6</anchor>
      <arglist>)(SchemaErrorCode)</arglist>
    </member>
    <member kind="typedef">
      <type>const RAPIDJSON_ERROR_CHARTYPE *(*</type>
      <name>GetPointerParseErrorFunc</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gac06b664281d2bf7b7892618eb1df440e</anchor>
      <arglist>)(PointerParseErrorCode)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ParseErrorCode</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga7d3acf640886b1f2552dc8c4cd6dea60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorNone</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a86a60b723dca32df5debab2c3db4235f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorDocumentEmpty</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a06183076357ebd9eca228666f614c286</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorDocumentRootNotSingular</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a2022599bcd4f64d58885a026f95751d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorValueInvalid</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60ab7fa69bce0c393cf3a2b6065111f2f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorObjectMissName</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60ab707b848425668e765def25554735242</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorObjectMissColon</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a58e952084a0dfdbc5630f624252aef5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorObjectMissCommaOrCurlyBracket</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a2a81a684f39fc882ec99f07e86343f73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorArrayMissCommaOrSquareBracket</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a1a4ac97731f997e9591b40f98ecd9f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorStringUnicodeEscapeInvalidHex</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a23c38bf88b8448555c0eb41e1735bd92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorStringUnicodeSurrogateInvalid</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a636209a2e516fbdb4db5ad0a83a6b386</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorStringEscapeInvalid</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a8dd0af5e6103a6503c61c38cb2b0bab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorStringMissQuotationMark</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60af7daa91caa53abb881ea231a874a4f40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorStringInvalidEncoding</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a62ce0f5c74e4ab34ac325d2adda8fa8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorNumberTooBig</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a240cebadea89f7282ab263b5a22c9805</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorNumberMissFraction</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60ac840ece3ba6874fe6f16c01ebb71031f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorNumberMissExponent</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a28a1c720ae63560780ccd992dc999ab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorTermination</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60ab250f87c3d8454c579364b5a0f697a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorUnspecificSyntaxError</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a7abf1a337294d984a3f4d18b5843fb24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ValidateErrorCode</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga633f43fd92e6ed5ceb87dbf570647847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrors</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a05469e37a2917fef9822eaf9e2dfd60e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorNone</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a569afaca49e48ee8bd928284409dcab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorMultipleOf</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847aa01437cd68a424643a8d9c12c1a3ff5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorMaximum</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a5338314546adf96b80b1da045478c89b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorExclusiveMaximum</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a88597e022ffccc312d5169a87dff6cff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorMinimum</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847ad365b8abebe4008652940df0a5add9c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorExclusiveMinimum</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a82c2d77ca5266afdbdbfef23df14696b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorMaxLength</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a6fea0335e9dbcd4bc86a4a7acd15cf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorMinLength</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847acb06559789b68cb387a9b9985016905e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorPattern</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847aef7f31586df8214ffc68309540d81a5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorMaxItems</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a0aa600c87a97fc3c75f51f99517cfdfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorMinItems</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847adbf02986e366165c0ef1d89697893802</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorUniqueItems</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847aebecfc4b0017d7ff7eeeb32a8c97b509</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorAdditionalItems</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847ac31340c34bc1e59d2b60318dfe665eeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorMaxProperties</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a79537e77683e3f1c89a4b6327a5f770e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorMinProperties</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a4b9fec15f21b43bbbd617469989c620f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorRequired</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a2d287b50e430269793dd82bb2ae91446</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorAdditionalProperties</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a553f149c39aa16541848b04442e1032b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorPatternProperties</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847ac6f7c8c63dd5ec2c838f34c49300e0a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorDependencies</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847ad9d2f317eae6e7a8f7eb3526a44c3962</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorEnum</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a6faf5d2c20183efadf523e10287fd7c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorType</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a7035a7fc3f6b3a51c91be264537fc504</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorOneOf</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a6e5e5914d33ee2a926362fb445343103</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorOneOfMatch</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847adc0a6461cdb08ae4e4d537774a7e8c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorAllOf</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847af47261845396dff12763a9be8c11f666</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorAnyOf</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847aaba92c1f6cbea5e14e5e8d8b86b042d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorNot</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a825119358f037a9d221d2f5735776429</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorReadOnly</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847ab6ec7f2cb68fad80313e18c9321f16dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorWriteOnly</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847ac1b9221db6f10c37ae4387e0466cf2cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SchemaErrorCode</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga8efcca4c439aac247da3f5755adb8c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorNone</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12af99f04ad13eef96ceea6c6210427fbb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorStartUnknown</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12af62c5af2d53ebd8bc98083e53d7a0891</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorRefPlainName</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12afdcb71bf9a3c0e0cfae500f79c7da19e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorRefInvalid</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a31c97e8a545af0e5a37f682a44f8821d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorRefPointerInvalid</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a5c2d37d5f8481da7ce2a6ddbdcfe5c05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorRefUnknown</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a982d32a07b999deb354908b8cb3d8c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorRefCyclical</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a8a33f3318f28252f5f57e38e90d3e6ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorRefNoRemoteProvider</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a8140af5b354a88f1e1ff2502552c7801</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorRefNoRemoteSchema</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a4f908c7669b91e824a79306028c7ccb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorRegexInvalid</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a8ed7db917fc77245178d74b46c2b6e79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorSpecUnknown</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12aacda77d52bfa818b6bf182ec8af2f63f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorSpecUnsupported</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a82dbee4f4a91164c38fd61816abb14a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorSpecIllegal</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a6d81cddf8554e12d852a803faf262c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorReadOnlyAndWriteOnly</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a741834bdd111606d5f86ff4c67c60f39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PointerParseErrorCode</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gade540ee4cc2a416c23b8ee2c12393c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPointerParseErrorNone</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ggade540ee4cc2a416c23b8ee2c12393c7ba9094f236b2ec70c42f1ea91dffc1e39b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPointerParseErrorTokenMustBeginWithSolidus</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ggade540ee4cc2a416c23b8ee2c12393c7ba2f2f8b238e201b7d540e8914bbfd2bed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPointerParseErrorInvalidEscape</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ggade540ee4cc2a416c23b8ee2c12393c7ba907c9fe4e541b257513e3a18635379f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPointerParseErrorInvalidPercentEncoding</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ggade540ee4cc2a416c23b8ee2c12393c7ba29831a02b8ee23a05d552b47f4d64d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPointerParseErrorCharacterMustPercentEncode</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ggade540ee4cc2a416c23b8ee2c12393c7bae244a98f53279fda5a750f847b81c54f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rapidjson.h</name>
    <path>include/rapidjson/</path>
    <filename>rapidjson_8h.html</filename>
    <namespace>rapidjson</namespace>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_MAJOR_VERSION</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>gaf1ff1685be6cbebb5d4b2ab997776f45</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_MINOR_VERSION</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>gaf9125105c593a636a79f1c2d96835376</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_PATCH_VERSION</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>gaf967d31be43666ce7f53756d73bd1cdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_VERSION_STRING</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>gad283cfde97d9a32b7d8e8107b11f70a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_NAMESPACE</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga743a79d3af927391fe3eb5c979136899</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_HAS_STDSTRING</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga2f2eef0ee4477f3fe5874703a66e997f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_USE_MEMBERSMAP</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga87dc65109882910388121e1dba15038b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_NO_INT64DEFINE</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga7f4e50c35dae3b015390daa6d48ce23c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_LITTLEENDIAN</name>
      <anchorfile>rapidjson_8h.html</anchorfile>
      <anchor>addcc0c3607c5790f35cc4c15885ff97c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_BIGENDIAN</name>
      <anchorfile>rapidjson_8h.html</anchorfile>
      <anchor>ac7951ebf8a2624ab85d2dcd3ec7af974</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_ENDIAN</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>gaba2445f582142cf918e74c2d22d1aa07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_64BIT</name>
      <anchorfile>rapidjson_8h.html</anchorfile>
      <anchor>a93973847cb99354b6b5bb5605aa7fe52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_ALIGN</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga583915242504c7fdb36e826f02f76242</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_UINT64_C2</name>
      <anchorfile>rapidjson_8h.html</anchorfile>
      <anchor>aaee1245f375a71be1ac9b8a07ba5fb8f</anchor>
      <arglist>(high32, low32)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_48BITPOINTER_OPTIMIZATION</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga93fb983f78208d12c822376e1ea6d185</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_SIMD</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga0ccf72f3ebc4b3306ab669f95ca5c64b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_NO_SIZETYPEDEFINE</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga250603aa9e2a12429b25ba0c8108ad4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_ASSERT</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>gabeba18d612187bad2ac62aed9276d47c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_STATIC_ASSERT</name>
      <anchorfile>rapidjson_8h.html</anchorfile>
      <anchor>af95188da1d8eb6d4b148fe9ce71cd7c4</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_LIKELY</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga5dc14176a9e71ace282404b0bcda57a1</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_UNLIKELY</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga6a2b1695c13e77ae425e3cbac980ccb5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_NOEXCEPT_ASSERT</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga2b2a0d9143aa4fb31205a85b34c43952</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_MALLOC</name>
      <anchorfile>rapidjson_8h.html</anchorfile>
      <anchor>a047ad77d620d1ae97c1bc70a9f316f27</anchor>
      <arglist>(size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_REALLOC</name>
      <anchorfile>rapidjson_8h.html</anchorfile>
      <anchor>aa2c0f2121d7803191a43609ea5d8dd67</anchor>
      <arglist>(ptr, new_size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_FREE</name>
      <anchorfile>rapidjson_8h.html</anchorfile>
      <anchor>aa6d5138eed2c5b311d9862d191393a5f</anchor>
      <arglist>(ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_NEW</name>
      <anchorfile>rapidjson_8h.html</anchorfile>
      <anchor>abdc7cd7902748ffe6626d71c59a73c3b</anchor>
      <arglist>(TypeName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_DELETE</name>
      <anchorfile>rapidjson_8h.html</anchorfile>
      <anchor>a52c941c3fdd646527cdcd42aa846a28a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>unsigned</type>
      <name>SizeType</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a44eb33eaa523e36d466b1ced64b85c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ae79a4751c1c460ff0de5ecc07874f3e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNullType</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ae79a4751c1c460ff0de5ecc07874f3e4a952871e4326b527154fc8aac1ac1f6ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kFalseType</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ae79a4751c1c460ff0de5ecc07874f3e4a9f2e7047832dce1029551b5de0f05607</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kTrueType</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ae79a4751c1c460ff0de5ecc07874f3e4a80d9f25b083abce45edbfdd3ba006c8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kObjectType</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ae79a4751c1c460ff0de5ecc07874f3e4acf030b422a32c3647c7c5973bd4dd0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kArrayType</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ae79a4751c1c460ff0de5ecc07874f3e4a058c622e1e7d59419ae58b895cbce468</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kStringType</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ae79a4751c1c460ff0de5ecc07874f3e4ad6379da3dc04b83a591992bfb9fabba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumberType</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ae79a4751c1c460ff0de5ecc07874f3e4abe572cb44ce198e467ccf9d63d50d82a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader.h</name>
    <path>include/rapidjson/</path>
    <filename>reader_8h.html</filename>
    <includes id="error_8h" name="error.h" local="yes" imported="no">error/error.h</includes>
    <class kind="struct">rapidjson::BaseReaderHandler</class>
    <class kind="class">rapidjson::GenericReader</class>
    <namespace>rapidjson</namespace>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_PARSE_ERROR_NORETURN</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga7f8c4265b2edda78568ae3338aaf1461</anchor>
      <arglist>(parseErrorCode, offset)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_PARSE_ERROR</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gae3689840fa6e89a241313f33b602f865</anchor>
      <arglist>(parseErrorCode, offset)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_PARSE_DEFAULT_FLAGS</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga77005e892e6601599beaf421b0395c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ParseFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseNoFlags</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9af2c7fa21e9e7656e467bd71079ac8fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseInsituFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9a02748971d6ea0c5e22c69b8aa7f344ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseValidateEncodingFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9a3df81f75479da8e052393f92cbec394b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseIterativeFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9a7923686c8bdb7614699f1fb1bb615bb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseStopWhenDoneFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9af84c60868704433b80aa51a62e042bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseFullPrecisionFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9adf80892cdfa076b2d1a7dd9530e15cb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseCommentsFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9ab5d719b36aac626135d5d622d0d837c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseNumbersAsStringsFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9a13981c0b803803f59d7a01aef3dfc987</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseTrailingCommasFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9af8b8470221dbc6046a40ff31d758ceec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseNanAndInfFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9a857894ab51cafa62956e9c9f0dafc4d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseEscapedApostropheFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9a9d0cd4c136483497f32f4af366b12d63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseDefaultFlags</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9a5640cb00db7814b7f22be3683dda9835</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SkipWhitespace</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a6efb0f4d2a6f81477a59718d42e9464a</anchor>
      <arglist>(InputStream &amp;is)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SkipWhitespace</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a3caa6f393c9940e6525d5f1c21ed9ea2</anchor>
      <arglist>(InsituStringStream &amp;is)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SkipWhitespace</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a791735c27e073a70d720c2775ddf9568</anchor>
      <arglist>(StringStream &amp;is)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rapidjson::Allocator</name>
    <filename>classrapidjson_1_1_allocator.html</filename>
  </compound>
  <compound kind="struct">
    <name>rapidjson::ASCII</name>
    <filename>structrapidjson_1_1_a_s_c_i_i.html</filename>
    <templarg>typename CharType</templarg>
  </compound>
  <compound kind="struct">
    <name>rapidjson::AutoUTF</name>
    <filename>structrapidjson_1_1_auto_u_t_f.html</filename>
    <templarg>typename CharType</templarg>
  </compound>
  <compound kind="class">
    <name>rapidjson::AutoUTFInputStream</name>
    <filename>classrapidjson_1_1_auto_u_t_f_input_stream.html</filename>
    <templarg>typename CharType</templarg>
    <templarg>typename InputByteStream</templarg>
    <member kind="function">
      <type></type>
      <name>AutoUTFInputStream</name>
      <anchorfile>classrapidjson_1_1_auto_u_t_f_input_stream.html</anchorfile>
      <anchor>a5c9f041a3b32bf15bc9be888a8731d35</anchor>
      <arglist>(InputByteStream &amp;is, UTFType type=kUTF8)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rapidjson::AutoUTFOutputStream</name>
    <filename>classrapidjson_1_1_auto_u_t_f_output_stream.html</filename>
    <templarg>typename CharType</templarg>
    <templarg>typename OutputByteStream</templarg>
    <member kind="function">
      <type></type>
      <name>AutoUTFOutputStream</name>
      <anchorfile>classrapidjson_1_1_auto_u_t_f_output_stream.html</anchorfile>
      <anchor>a39c828ee4c5b052df7338ec7fda1a17d</anchor>
      <arglist>(OutputByteStream &amp;os, UTFType type, bool putBOM)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rapidjson::BaseReaderHandler</name>
    <filename>structrapidjson_1_1_base_reader_handler.html</filename>
    <templarg>typename Encoding</templarg>
    <templarg>typename Derived</templarg>
    <member kind="function">
      <type>bool</type>
      <name>RawNumber</name>
      <anchorfile>structrapidjson_1_1_base_reader_handler.html</anchorfile>
      <anchor>a0de969fd05528960c2a7de51b2265bf1</anchor>
      <arglist>(const Ch *str, SizeType len, bool copy)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rapidjson::BasicIStreamWrapper</name>
    <filename>classrapidjson_1_1_basic_i_stream_wrapper.html</filename>
    <templarg>typename StreamType</templarg>
    <member kind="function">
      <type></type>
      <name>BasicIStreamWrapper</name>
      <anchorfile>classrapidjson_1_1_basic_i_stream_wrapper.html</anchorfile>
      <anchor>a2b4e069522fa9119685f1cee836e5cfa</anchor>
      <arglist>(StreamType &amp;stream)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasicIStreamWrapper</name>
      <anchorfile>classrapidjson_1_1_basic_i_stream_wrapper.html</anchorfile>
      <anchor>acd380a93ccc01d02aef95ea2a926e154</anchor>
      <arglist>(StreamType &amp;stream, char *buffer, size_t bufferSize)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rapidjson::BasicOStreamWrapper</name>
    <filename>classrapidjson_1_1_basic_o_stream_wrapper.html</filename>
    <templarg>typename StreamType</templarg>
  </compound>
  <compound kind="class">
    <name>rapidjson::CrtAllocator</name>
    <filename>classrapidjson_1_1_crt_allocator.html</filename>
  </compound>
  <compound kind="class">
    <name>rapidjson::CursorStreamWrapper</name>
    <filename>classrapidjson_1_1_cursor_stream_wrapper.html</filename>
    <templarg>typename InputStream</templarg>
    <templarg>typename Encoding</templarg>
    <base>rapidjson::GenericStreamWrapper</base>
    <member kind="function">
      <type>size_t</type>
      <name>GetLine</name>
      <anchorfile>classrapidjson_1_1_cursor_stream_wrapper.html</anchorfile>
      <anchor>a97c6cbbd334911639fe522bbfdd350b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetColumn</name>
      <anchorfile>classrapidjson_1_1_cursor_stream_wrapper.html</anchorfile>
      <anchor>a33002632924bb10108077a22c6aa108d</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rapidjson::EncodedInputStream</name>
    <filename>classrapidjson_1_1_encoded_input_stream.html</filename>
    <templarg>typename Encoding</templarg>
    <templarg>typename InputByteStream</templarg>
  </compound>
  <compound kind="class">
    <name>rapidjson::EncodedInputStream&lt; UTF8&lt;&gt;, MemoryStream &gt;</name>
    <filename>classrapidjson_1_1_encoded_input_stream_3_01_u_t_f8_3_4_00_01_memory_stream_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>rapidjson::EncodedOutputStream</name>
    <filename>classrapidjson_1_1_encoded_output_stream.html</filename>
    <templarg>typename Encoding</templarg>
    <templarg>typename OutputByteStream</templarg>
  </compound>
  <compound kind="class">
    <name>rapidjson::Encoding</name>
    <filename>classrapidjson_1_1_encoding.html</filename>
  </compound>
  <compound kind="class">
    <name>rapidjson::FileReadStream</name>
    <filename>classrapidjson_1_1_file_read_stream.html</filename>
    <member kind="typedef">
      <type>char</type>
      <name>Ch</name>
      <anchorfile>classrapidjson_1_1_file_read_stream.html</anchorfile>
      <anchor>a4a5f34875b40d22def206c9a09ecd929</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileReadStream</name>
      <anchorfile>classrapidjson_1_1_file_read_stream.html</anchorfile>
      <anchor>a72b610ada5d86e8977a2bc1f2f4c0808</anchor>
      <arglist>(std::FILE *fp, char *buffer, size_t bufferSize)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rapidjson::FileWriteStream</name>
    <filename>classrapidjson_1_1_file_write_stream.html</filename>
    <member kind="typedef">
      <type>char</type>
      <name>Ch</name>
      <anchorfile>classrapidjson_1_1_file_write_stream.html</anchorfile>
      <anchor>afc606cc81f6c3709d81bf99b30566330</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rapidjson::GenericArray</name>
    <filename>classrapidjson_1_1_generic_array.html</filename>
    <templarg>bool Const</templarg>
    <templarg>typename ValueT</templarg>
  </compound>
  <compound kind="class">
    <name>rapidjson::GenericDocument</name>
    <filename>classrapidjson_1_1_generic_document.html</filename>
    <templarg>typename Encoding</templarg>
    <templarg>typename Allocator</templarg>
    <templarg>typename StackAllocator</templarg>
    <base>rapidjson::GenericValue</base>
    <member kind="typedef">
      <type>Encoding::Ch</type>
      <name>Ch</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a8367a827588dd91d02e21ef945bec9f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericValue&lt; Encoding, Allocator &gt;</type>
      <name>ValueType</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a41bbec044c421e870a9d355075d741bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Allocator</type>
      <name>AllocatorType</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a4c85243a28c9dcf2d1357da00fcaa773</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StackAllocator</type>
      <name>StackAllocatorType</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a24269e0fd5b8ca98c6f61a3690188eb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericDocument</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>aa52c3016961f25ecd989d82839bce4e5</anchor>
      <arglist>(Type type, Allocator *allocator=0, size_t stackCapacity=kDefaultStackCapacity, StackAllocator *stackAllocator=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericDocument</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a82b27e7b228eb46a23f99720063ab4fb</anchor>
      <arglist>(Allocator *allocator=0, size_t stackCapacity=kDefaultStackCapacity, StackAllocator *stackAllocator=0)</arglist>
    </member>
    <member kind="function">
      <type>GenericDocument &amp;</type>
      <name>Swap</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>acb227f93465dac0749dbac6ed5372507</anchor>
      <arglist>(GenericDocument &amp;rhs) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>GenericDocument &amp;</type>
      <name>Populate</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a0132fa5625a0505e019853595caca5a8</anchor>
      <arglist>(Generator &amp;g)</arglist>
    </member>
    <member kind="function">
      <type>Allocator &amp;</type>
      <name>GetAllocator</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a05742a309dd6e7abcce61523decd44f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetStackCapacity</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a153e5a065ca9660673974f9df203be4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>Swap</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a60fc0ca2a1aa00cec7c6984749296b82</anchor>
      <arglist>(GenericValue &amp;other) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>GenericDocument &amp;</type>
      <name>ParseStream</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a56e6dcd7d47377877de9f67a43757974</anchor>
      <arglist>(InputStream &amp;is)</arglist>
    </member>
    <member kind="function">
      <type>GenericDocument &amp;</type>
      <name>ParseStream</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a1b18d206312e651008f92d47d1921e81</anchor>
      <arglist>(InputStream &amp;is)</arglist>
    </member>
    <member kind="function">
      <type>GenericDocument &amp;</type>
      <name>ParseStream</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a936b98d89fe8020d1b976ff55bfeff7e</anchor>
      <arglist>(InputStream &amp;is)</arglist>
    </member>
    <member kind="function">
      <type>GenericDocument &amp;</type>
      <name>ParseInsitu</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>ad15651f2ef5d041a548a2afbd2e61315</anchor>
      <arglist>(Ch *str)</arglist>
    </member>
    <member kind="function">
      <type>GenericDocument &amp;</type>
      <name>ParseInsitu</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a0aa6066e402850ecb7db0acd798bb99b</anchor>
      <arglist>(Ch *str)</arglist>
    </member>
    <member kind="function">
      <type>GenericDocument &amp;</type>
      <name>Parse</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>aa54ac886c9e93102216c4e1b4126cb76</anchor>
      <arglist>(const typename SourceEncoding::Ch *str)</arglist>
    </member>
    <member kind="function">
      <type>GenericDocument &amp;</type>
      <name>Parse</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>af828b890436e121cd96562745d23cb4f</anchor>
      <arglist>(const Ch *str)</arglist>
    </member>
    <member kind="function">
      <type>GenericDocument &amp;</type>
      <name>Parse</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>ae984ea489d3add488ce1e7a7ac4da4f2</anchor>
      <arglist>(const Ch *str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasParseError</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a7607bb42b51547e44bfd4cab35d8f20e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ParseErrorCode</type>
      <name>GetParseError</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>ab94c280c079a6837a24951cb4d8f337b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetErrorOffset</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>af532179ca5ad5434a5e8af63f5da4c5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ParseResult</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a36d19989c9221b27036675455516a974</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a0d63efcc43758ac3aed77e868233369d</anchor>
      <arglist>(GenericDocument &amp;a, GenericDocument &amp;b) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>GenericDocument &amp;</type>
      <name>ParseStream</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a56e6dcd7d47377877de9f67a43757974</anchor>
      <arglist>(InputStream &amp;is)</arglist>
    </member>
    <member kind="function">
      <type>GenericDocument &amp;</type>
      <name>ParseStream</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a1b18d206312e651008f92d47d1921e81</anchor>
      <arglist>(InputStream &amp;is)</arglist>
    </member>
    <member kind="function">
      <type>GenericDocument &amp;</type>
      <name>ParseStream</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a936b98d89fe8020d1b976ff55bfeff7e</anchor>
      <arglist>(InputStream &amp;is)</arglist>
    </member>
    <member kind="function">
      <type>GenericDocument &amp;</type>
      <name>ParseInsitu</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>ad15651f2ef5d041a548a2afbd2e61315</anchor>
      <arglist>(Ch *str)</arglist>
    </member>
    <member kind="function">
      <type>GenericDocument &amp;</type>
      <name>ParseInsitu</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a0aa6066e402850ecb7db0acd798bb99b</anchor>
      <arglist>(Ch *str)</arglist>
    </member>
    <member kind="function">
      <type>GenericDocument &amp;</type>
      <name>Parse</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>aa54ac886c9e93102216c4e1b4126cb76</anchor>
      <arglist>(const typename SourceEncoding::Ch *str)</arglist>
    </member>
    <member kind="function">
      <type>GenericDocument &amp;</type>
      <name>Parse</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>af828b890436e121cd96562745d23cb4f</anchor>
      <arglist>(const Ch *str)</arglist>
    </member>
    <member kind="function">
      <type>GenericDocument &amp;</type>
      <name>Parse</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>ae984ea489d3add488ce1e7a7ac4da4f2</anchor>
      <arglist>(const Ch *str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasParseError</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a7607bb42b51547e44bfd4cab35d8f20e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ParseErrorCode</type>
      <name>GetParseError</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>ab94c280c079a6837a24951cb4d8f337b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetErrorOffset</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>af532179ca5ad5434a5e8af63f5da4c5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ParseResult</name>
      <anchorfile>classrapidjson_1_1_generic_document.html</anchorfile>
      <anchor>a36d19989c9221b27036675455516a974</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rapidjson::GenericInsituStringStream</name>
    <filename>structrapidjson_1_1_generic_insitu_string_stream.html</filename>
    <templarg>typename Encoding</templarg>
  </compound>
  <compound kind="class">
    <name>rapidjson::GenericMember</name>
    <filename>classrapidjson_1_1_generic_member.html</filename>
    <templarg>typename Encoding</templarg>
    <templarg>typename Allocator</templarg>
    <member kind="function">
      <type>GenericMember &amp;</type>
      <name>operator=</name>
      <anchorfile>classrapidjson_1_1_generic_member.html</anchorfile>
      <anchor>a747a64ce29836823964da7a7e783d53a</anchor>
      <arglist>(GenericMember &amp;rhs) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="variable">
      <type>GenericValue&lt; Encoding, Allocator &gt;</type>
      <name>name</name>
      <anchorfile>classrapidjson_1_1_generic_member.html</anchorfile>
      <anchor>ae820eaa74b415a9073f3f3855f6c6607</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GenericValue&lt; Encoding, Allocator &gt;</type>
      <name>value</name>
      <anchorfile>classrapidjson_1_1_generic_member.html</anchorfile>
      <anchor>a8ffff2076e62d988a070a136da6ffca6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rapidjson::GenericMemberIterator</name>
    <filename>classrapidjson_1_1_generic_member_iterator.html</filename>
    <templarg>bool Const</templarg>
    <templarg>typename Encoding</templarg>
    <templarg>typename Allocator</templarg>
    <member kind="typedef">
      <type>GenericMemberIterator</type>
      <name>Iterator</name>
      <anchorfile>classrapidjson_1_1_generic_member_iterator.html</anchorfile>
      <anchor>a37091c3dd8470486ef5188f3c1108653</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericMemberIterator&lt; true, Encoding, Allocator &gt;</type>
      <name>ConstIterator</name>
      <anchorfile>classrapidjson_1_1_generic_member_iterator.html</anchorfile>
      <anchor>a61b9a9ba8a5917d90406532f104605cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericMemberIterator&lt; false, Encoding, Allocator &gt;</type>
      <name>NonConstIterator</name>
      <anchorfile>classrapidjson_1_1_generic_member_iterator.html</anchorfile>
      <anchor>a1a91868fa388664bb301061e3e24badb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pointer</type>
      <name>Pointer</name>
      <anchorfile>classrapidjson_1_1_generic_member_iterator.html</anchorfile>
      <anchor>aa9d53504374c7c6bdf46775482c5b107</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>reference</type>
      <name>Reference</name>
      <anchorfile>classrapidjson_1_1_generic_member_iterator.html</anchorfile>
      <anchor>abe27838f8dc71fdb38028ef27ae0b4f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>difference_type</type>
      <name>DifferenceType</name>
      <anchorfile>classrapidjson_1_1_generic_member_iterator.html</anchorfile>
      <anchor>aff2739a9265639a7a4be8c3e6216b31a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericMemberIterator</name>
      <anchorfile>classrapidjson_1_1_generic_member_iterator.html</anchorfile>
      <anchor>ac920af483c9e31a6746c22acf0dffc50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericMemberIterator</name>
      <anchorfile>classrapidjson_1_1_generic_member_iterator.html</anchorfile>
      <anchor>aa30ffef74b3f4978b403024d81b484e4</anchor>
      <arglist>(const NonConstIterator &amp;it)</arglist>
    </member>
    <member kind="function">
      <type>DifferenceType</type>
      <name>operator-</name>
      <anchorfile>classrapidjson_1_1_generic_member_iterator.html</anchorfile>
      <anchor>abfad2c34a97f82178cbf9464e958e2c2</anchor>
      <arglist>(ConstIterator that) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rapidjson::GenericMemoryBuffer</name>
    <filename>structrapidjson_1_1_generic_memory_buffer.html</filename>
    <templarg>typename Allocator</templarg>
  </compound>
  <compound kind="class">
    <name>rapidjson::GenericObject</name>
    <filename>classrapidjson_1_1_generic_object.html</filename>
    <templarg>bool Const</templarg>
    <templarg>typename ValueT</templarg>
  </compound>
  <compound kind="class">
    <name>rapidjson::GenericPointer</name>
    <filename>classrapidjson_1_1_generic_pointer.html</filename>
    <templarg>typename ValueType</templarg>
    <templarg>typename Allocator</templarg>
    <class kind="struct">rapidjson::GenericPointer::Token</class>
    <member kind="typedef">
      <type>ValueType::EncodingType</type>
      <name>EncodingType</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a399790c5fe8076d91a58c621c0c2a79e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueType::Ch</type>
      <name>Ch</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a850f78846c5548565f8395be5f3427b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>GenericPointer</type>
      <name>Append</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a7cb5eda2af1722e52efa591c4103ebec</anchor>
      <arglist>(const Token &amp;token, Allocator *allocator=0) const</arglist>
    </member>
    <member kind="function">
      <type>GenericPointer</type>
      <name>Append</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a30f4eac82e9fded60dead3f7d1cb3941</anchor>
      <arglist>(const Ch *name, SizeType length, Allocator *allocator=0) const</arglist>
    </member>
    <member kind="function">
      <type>GenericPointer</type>
      <name>Append</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a033a099aaa6b36df2d5171bdc593e98e</anchor>
      <arglist>(T *name, Allocator *allocator=0) const</arglist>
    </member>
    <member kind="function">
      <type>GenericPointer</type>
      <name>Append</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a4aadec8f0efe9a7ac42ac4906a5f676d</anchor>
      <arglist>(SizeType index, Allocator *allocator=0) const</arglist>
    </member>
    <member kind="function">
      <type>GenericPointer</type>
      <name>Append</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a618808f066fb1104d36f012cced3b27a</anchor>
      <arglist>(const ValueType &amp;token, Allocator *allocator=0) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a98b96d54c2c3378f1892ffffc501069c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetParseErrorOffset</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a75caef2a047c56466f0b599bdda882c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PointerParseErrorCode</type>
      <name>GetParseErrorCode</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>af649a48d77aa856cddaa748ad6b0d6ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Allocator &amp;</type>
      <name>GetAllocator</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a61972a4b159a47b0dc989887673817a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Token *</type>
      <name>GetTokens</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>af37eb30b8bb94229914c88d023d0ee60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetTokenCount</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a791e40c10682b9db0adf2b6e0b8b3d78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a3bb15fa5592f2bfad6f2c9af7940b952</anchor>
      <arglist>(const GenericPointer &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a8ca73989b4f3ffa5154a229f95f1e0c9</anchor>
      <arglist>(const GenericPointer &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a2fbc58a202efc592498ca52f7f28741a</anchor>
      <arglist>(const GenericPointer &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Stringify</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a73073ca3c9e47eba7c27c16151b269ac</anchor>
      <arglist>(OutputStream &amp;os) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StringifyUriFragment</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>ae985c27c1d061b93ba4f8875cfa5f7b5</anchor>
      <arglist>(OutputStream &amp;os) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Create</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a3408cdb1417caefd022acceb75cd5f84</anchor>
      <arglist>(ValueType &amp;root, typename ValueType::AllocatorType &amp;allocator, bool *alreadyExist=0) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Create</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a6c2226d8e49a9bc24b180e59b07521b0</anchor>
      <arglist>(GenericDocument&lt; EncodingType, typename ValueType::AllocatorType, stackAllocator &gt; &amp;document, bool *alreadyExist=0) const</arglist>
    </member>
    <member kind="function">
      <type>UriType</type>
      <name>GetUri</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>aea5ddff1f48b94e584c4c24ecae093fe</anchor>
      <arglist>(ValueType &amp;root, const UriType &amp;rootUri, size_t *unresolvedTokenIndex=0, Allocator *allocator=0) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType *</type>
      <name>Get</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a8af14e68f420ac2847d6d4705cc359cc</anchor>
      <arglist>(ValueType &amp;root, size_t *unresolvedTokenIndex=0) const</arglist>
    </member>
    <member kind="function">
      <type>const ValueType *</type>
      <name>Get</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>adbb85e4081288eb2b0791c2fcc970c2f</anchor>
      <arglist>(const ValueType &amp;root, size_t *unresolvedTokenIndex=0) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>GetWithDefault</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a84bb0e4ba21a01d42d975dd0d0311d3c</anchor>
      <arglist>(ValueType &amp;root, const ValueType &amp;defaultValue, typename ValueType::AllocatorType &amp;allocator) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>GetWithDefault</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a0fded7752cfc5499eee8d0e500a807ef</anchor>
      <arglist>(ValueType &amp;root, const Ch *defaultValue, typename ValueType::AllocatorType &amp;allocator) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>GetWithDefault</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a32a85dca2af6f5a9f819980b33def500</anchor>
      <arglist>(ValueType &amp;root, T defaultValue, typename ValueType::AllocatorType &amp;allocator) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>GetWithDefault</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>acb78e1541d77384509a3ae20098a1526</anchor>
      <arglist>(GenericDocument&lt; EncodingType, typename ValueType::AllocatorType, stackAllocator &gt; &amp;document, const ValueType &amp;defaultValue) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>GetWithDefault</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>acc0f7db30f9ab4ec6be5d4567ffa8488</anchor>
      <arglist>(GenericDocument&lt; EncodingType, typename ValueType::AllocatorType, stackAllocator &gt; &amp;document, const Ch *defaultValue) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>GetWithDefault</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a99286e0a06bb7e2de2809a81879134f7</anchor>
      <arglist>(GenericDocument&lt; EncodingType, typename ValueType::AllocatorType, stackAllocator &gt; &amp;document, T defaultValue) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Set</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>acb91b8167198f89734940d0b20b56694</anchor>
      <arglist>(ValueType &amp;root, ValueType &amp;value, typename ValueType::AllocatorType &amp;allocator) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Set</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a83cad8111461f97df80a5233081d02ab</anchor>
      <arglist>(ValueType &amp;root, const ValueType &amp;value, typename ValueType::AllocatorType &amp;allocator) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Set</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a3a4d6e6b728f139138ea2c98c30cf30a</anchor>
      <arglist>(ValueType &amp;root, const Ch *value, typename ValueType::AllocatorType &amp;allocator) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Set</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>ad0921e531c3b275b29db587072c9e588</anchor>
      <arglist>(ValueType &amp;root, T value, typename ValueType::AllocatorType &amp;allocator) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Set</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a8fe65c6bbadbc351ad33599a81a8fdee</anchor>
      <arglist>(GenericDocument&lt; EncodingType, typename ValueType::AllocatorType, stackAllocator &gt; &amp;document, ValueType &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Set</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a95b9e508d1f63dfa9d3d022eee6bd174</anchor>
      <arglist>(GenericDocument&lt; EncodingType, typename ValueType::AllocatorType, stackAllocator &gt; &amp;document, const ValueType &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Set</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a4a78b6d3b96437372992e29706ac7135</anchor>
      <arglist>(GenericDocument&lt; EncodingType, typename ValueType::AllocatorType, stackAllocator &gt; &amp;document, const Ch *value) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Set</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a21147e0a3cdaf83a989a509ceb4992e9</anchor>
      <arglist>(GenericDocument&lt; EncodingType, typename ValueType::AllocatorType, stackAllocator &gt; &amp;document, T value) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Swap</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a903b93fcac5fbb8fc30676304179e1fc</anchor>
      <arglist>(ValueType &amp;root, ValueType &amp;value, typename ValueType::AllocatorType &amp;allocator) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Swap</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>aa6b98833d11a31a4cb68822bf1e4bd70</anchor>
      <arglist>(GenericDocument&lt; EncodingType, typename ValueType::AllocatorType, stackAllocator &gt; &amp;document, ValueType &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Erase</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a923a1100c029a28e25894708bdce784c</anchor>
      <arglist>(ValueType &amp;root) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericPointer</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>aa077ce171ea25cf501c12f2d5df7f248</anchor>
      <arglist>(Allocator *allocator=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericPointer</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a8f831aae14afc493a82b5fb6aa9c3c43</anchor>
      <arglist>(const Ch *source, Allocator *allocator=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericPointer</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a00ad17ea227d2556404df7cc64c6aeb5</anchor>
      <arglist>(const Ch *source, size_t length, Allocator *allocator=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericPointer</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a6df9f6a01d1b5945811055e1cf8aead6</anchor>
      <arglist>(const Token *tokens, size_t tokenCount)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericPointer</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>ae071847ed3e7389f5b256d26fcc8fd62</anchor>
      <arglist>(const GenericPointer &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericPointer</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>afedfcaac36fa589a46667825d3d0b763</anchor>
      <arglist>(const GenericPointer &amp;rhs, Allocator *allocator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GenericPointer</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a0e144b9956a5272c13ceff3b9306e748</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GenericPointer &amp;</type>
      <name>operator=</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a0104629ef789304e9999daacf55e6bfc</anchor>
      <arglist>(const GenericPointer &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>GenericPointer &amp;</type>
      <name>Swap</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>addebb7e8ea5b4ba6568b54690215ef6a</anchor>
      <arglist>(GenericPointer &amp;other) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a249c61b5d4bed20c3f8972c57f46a937</anchor>
      <arglist>(GenericPointer &amp;a, GenericPointer &amp;b) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>GenericPointer</type>
      <name>Append</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a7cb5eda2af1722e52efa591c4103ebec</anchor>
      <arglist>(const Token &amp;token, Allocator *allocator=0) const</arglist>
    </member>
    <member kind="function">
      <type>GenericPointer</type>
      <name>Append</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a30f4eac82e9fded60dead3f7d1cb3941</anchor>
      <arglist>(const Ch *name, SizeType length, Allocator *allocator=0) const</arglist>
    </member>
    <member kind="function">
      <type>GenericPointer</type>
      <name>Append</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a033a099aaa6b36df2d5171bdc593e98e</anchor>
      <arglist>(T *name, Allocator *allocator=0) const</arglist>
    </member>
    <member kind="function">
      <type>GenericPointer</type>
      <name>Append</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a4aadec8f0efe9a7ac42ac4906a5f676d</anchor>
      <arglist>(SizeType index, Allocator *allocator=0) const</arglist>
    </member>
    <member kind="function">
      <type>GenericPointer</type>
      <name>Append</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a618808f066fb1104d36f012cced3b27a</anchor>
      <arglist>(const ValueType &amp;token, Allocator *allocator=0) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a98b96d54c2c3378f1892ffffc501069c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetParseErrorOffset</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a75caef2a047c56466f0b599bdda882c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PointerParseErrorCode</type>
      <name>GetParseErrorCode</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>af649a48d77aa856cddaa748ad6b0d6ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Allocator &amp;</type>
      <name>GetAllocator</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a61972a4b159a47b0dc989887673817a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Token *</type>
      <name>GetTokens</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>af37eb30b8bb94229914c88d023d0ee60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetTokenCount</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a791e40c10682b9db0adf2b6e0b8b3d78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a3bb15fa5592f2bfad6f2c9af7940b952</anchor>
      <arglist>(const GenericPointer &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a8ca73989b4f3ffa5154a229f95f1e0c9</anchor>
      <arglist>(const GenericPointer &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a2fbc58a202efc592498ca52f7f28741a</anchor>
      <arglist>(const GenericPointer &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Stringify</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a73073ca3c9e47eba7c27c16151b269ac</anchor>
      <arglist>(OutputStream &amp;os) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StringifyUriFragment</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>ae985c27c1d061b93ba4f8875cfa5f7b5</anchor>
      <arglist>(OutputStream &amp;os) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Create</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a3408cdb1417caefd022acceb75cd5f84</anchor>
      <arglist>(ValueType &amp;root, typename ValueType::AllocatorType &amp;allocator, bool *alreadyExist=0) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Create</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a6c2226d8e49a9bc24b180e59b07521b0</anchor>
      <arglist>(GenericDocument&lt; EncodingType, typename ValueType::AllocatorType, stackAllocator &gt; &amp;document, bool *alreadyExist=0) const</arglist>
    </member>
    <member kind="function">
      <type>UriType</type>
      <name>GetUri</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>aea5ddff1f48b94e584c4c24ecae093fe</anchor>
      <arglist>(ValueType &amp;root, const UriType &amp;rootUri, size_t *unresolvedTokenIndex=0, Allocator *allocator=0) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType *</type>
      <name>Get</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a8af14e68f420ac2847d6d4705cc359cc</anchor>
      <arglist>(ValueType &amp;root, size_t *unresolvedTokenIndex=0) const</arglist>
    </member>
    <member kind="function">
      <type>const ValueType *</type>
      <name>Get</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>adbb85e4081288eb2b0791c2fcc970c2f</anchor>
      <arglist>(const ValueType &amp;root, size_t *unresolvedTokenIndex=0) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>GetWithDefault</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a84bb0e4ba21a01d42d975dd0d0311d3c</anchor>
      <arglist>(ValueType &amp;root, const ValueType &amp;defaultValue, typename ValueType::AllocatorType &amp;allocator) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>GetWithDefault</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a0fded7752cfc5499eee8d0e500a807ef</anchor>
      <arglist>(ValueType &amp;root, const Ch *defaultValue, typename ValueType::AllocatorType &amp;allocator) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>GetWithDefault</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a32a85dca2af6f5a9f819980b33def500</anchor>
      <arglist>(ValueType &amp;root, T defaultValue, typename ValueType::AllocatorType &amp;allocator) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>GetWithDefault</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>acb78e1541d77384509a3ae20098a1526</anchor>
      <arglist>(GenericDocument&lt; EncodingType, typename ValueType::AllocatorType, stackAllocator &gt; &amp;document, const ValueType &amp;defaultValue) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>GetWithDefault</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>acc0f7db30f9ab4ec6be5d4567ffa8488</anchor>
      <arglist>(GenericDocument&lt; EncodingType, typename ValueType::AllocatorType, stackAllocator &gt; &amp;document, const Ch *defaultValue) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>GetWithDefault</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a99286e0a06bb7e2de2809a81879134f7</anchor>
      <arglist>(GenericDocument&lt; EncodingType, typename ValueType::AllocatorType, stackAllocator &gt; &amp;document, T defaultValue) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Set</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>acb91b8167198f89734940d0b20b56694</anchor>
      <arglist>(ValueType &amp;root, ValueType &amp;value, typename ValueType::AllocatorType &amp;allocator) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Set</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a83cad8111461f97df80a5233081d02ab</anchor>
      <arglist>(ValueType &amp;root, const ValueType &amp;value, typename ValueType::AllocatorType &amp;allocator) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Set</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a3a4d6e6b728f139138ea2c98c30cf30a</anchor>
      <arglist>(ValueType &amp;root, const Ch *value, typename ValueType::AllocatorType &amp;allocator) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Set</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>ad0921e531c3b275b29db587072c9e588</anchor>
      <arglist>(ValueType &amp;root, T value, typename ValueType::AllocatorType &amp;allocator) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Set</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a8fe65c6bbadbc351ad33599a81a8fdee</anchor>
      <arglist>(GenericDocument&lt; EncodingType, typename ValueType::AllocatorType, stackAllocator &gt; &amp;document, ValueType &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Set</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a95b9e508d1f63dfa9d3d022eee6bd174</anchor>
      <arglist>(GenericDocument&lt; EncodingType, typename ValueType::AllocatorType, stackAllocator &gt; &amp;document, const ValueType &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Set</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a4a78b6d3b96437372992e29706ac7135</anchor>
      <arglist>(GenericDocument&lt; EncodingType, typename ValueType::AllocatorType, stackAllocator &gt; &amp;document, const Ch *value) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>Set</name>
      <anchorfile>classrapidjson_1_1_generic_pointer.html</anchorfile>
      <anchor>a21147e0a3cdaf83a989a509ceb4992e9</anchor>
      <arglist>(GenericDocument&lt; EncodingType, typename ValueType::AllocatorType, stackAllocator &gt; &amp;document, T value) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rapidjson::GenericReader</name>
    <filename>classrapidjson_1_1_generic_reader.html</filename>
    <templarg>typename SourceEncoding</templarg>
    <templarg>typename TargetEncoding</templarg>
    <templarg>typename StackAllocator</templarg>
    <member kind="typedef">
      <type>SourceEncoding::Ch</type>
      <name>Ch</name>
      <anchorfile>classrapidjson_1_1_generic_reader.html</anchorfile>
      <anchor>a0781d19e8c6bc044d9cc5f5d3dde287e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericReader</name>
      <anchorfile>classrapidjson_1_1_generic_reader.html</anchorfile>
      <anchor>a56ab1065ea75167aeacb4802425bf57f</anchor>
      <arglist>(StackAllocator *stackAllocator=0, size_t stackCapacity=kDefaultStackCapacity)</arglist>
    </member>
    <member kind="function">
      <type>ParseResult</type>
      <name>Parse</name>
      <anchorfile>classrapidjson_1_1_generic_reader.html</anchorfile>
      <anchor>ac9c540b77de19661f6f45e04b9b0937b</anchor>
      <arglist>(InputStream &amp;is, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>ParseResult</type>
      <name>Parse</name>
      <anchorfile>classrapidjson_1_1_generic_reader.html</anchorfile>
      <anchor>a2bac14d193873d661d79ad000473a908</anchor>
      <arglist>(InputStream &amp;is, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IterativeParseInit</name>
      <anchorfile>classrapidjson_1_1_generic_reader.html</anchorfile>
      <anchor>a90403a2c55dadf82fd2bb9d4c66b3280</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IterativeParseNext</name>
      <anchorfile>classrapidjson_1_1_generic_reader.html</anchorfile>
      <anchor>abac6611bec17167de50fede5cd5194ca</anchor>
      <arglist>(InputStream &amp;is, Handler &amp;handler)</arglist>
    </member>
    <member kind="function">
      <type>RAPIDJSON_FORCEINLINE bool</type>
      <name>IterativeParseComplete</name>
      <anchorfile>classrapidjson_1_1_generic_reader.html</anchorfile>
      <anchor>a037aee35044b894d1487b42365aadc4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasParseError</name>
      <anchorfile>classrapidjson_1_1_generic_reader.html</anchorfile>
      <anchor>ac42370c3497a0e2b6973110f298e3a59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ParseErrorCode</type>
      <name>GetParseErrorCode</name>
      <anchorfile>classrapidjson_1_1_generic_reader.html</anchorfile>
      <anchor>a042c621cf745c5ed3a6f5ff9418dd05e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetErrorOffset</name>
      <anchorfile>classrapidjson_1_1_generic_reader.html</anchorfile>
      <anchor>ab50019e0a715320f83b7610b83dcef8f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rapidjson::GenericSchemaDocument</name>
    <filename>classrapidjson_1_1_generic_schema_document.html</filename>
    <templarg>typename ValueT</templarg>
    <templarg>typename Allocator</templarg>
    <member kind="function">
      <type></type>
      <name>GenericSchemaDocument</name>
      <anchorfile>classrapidjson_1_1_generic_schema_document.html</anchorfile>
      <anchor>af5737381e8504eaaab1153c01e0fefe4</anchor>
      <arglist>(const ValueType &amp;document, const Ch *uri=0, SizeType uriLength=0, IRemoteSchemaDocumentProviderType *remoteProvider=0, Allocator *allocator=0, const PointerType &amp;pointer=PointerType(), const Specification &amp;spec=Specification(kDraft04))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GenericSchemaDocument</name>
      <anchorfile>classrapidjson_1_1_generic_schema_document.html</anchorfile>
      <anchor>adf6f3372013227873ed392dee1e752bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const SchemaType &amp;</type>
      <name>GetRoot</name>
      <anchorfile>classrapidjson_1_1_generic_schema_document.html</anchorfile>
      <anchor>a2f48d3365e4a37efe05c60887f1ac457</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GValue &amp;</type>
      <name>GetError</name>
      <anchorfile>classrapidjson_1_1_generic_schema_document.html</anchorfile>
      <anchor>ad44ba36d735cacae7cd67e19799f2854</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SchemaError</name>
      <anchorfile>classrapidjson_1_1_generic_schema_document.html</anchorfile>
      <anchor>a9d7f8ba0fdd15df9b89489447a4778ae</anchor>
      <arglist>(const SchemaErrorCode code, const PointerType &amp;location)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SchemaErrorValue</name>
      <anchorfile>classrapidjson_1_1_generic_schema_document.html</anchorfile>
      <anchor>a7f478822b896cdf6179532a0bcee18a0</anchor>
      <arglist>(const SchemaErrorCode code, const PointerType &amp;location, const Ch *value, SizeType length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SchemaErrorPointer</name>
      <anchorfile>classrapidjson_1_1_generic_schema_document.html</anchorfile>
      <anchor>a6aff008ea3e1ed297e5c8dd765a0cb46</anchor>
      <arglist>(const SchemaErrorCode code, const PointerType &amp;location, const Ch *value, SizeType length, const PointerType &amp;pointer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Specification</type>
      <name>GetSpecification</name>
      <anchorfile>classrapidjson_1_1_generic_schema_document.html</anchorfile>
      <anchor>a101dee741dc047a00d2560faae8d19d5</anchor>
      <arglist>(const ValueType &amp;document)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rapidjson::GenericSchemaValidator</name>
    <filename>classrapidjson_1_1_generic_schema_validator.html</filename>
    <templarg>typename SchemaDocumentType</templarg>
    <templarg>typename OutputHandler</templarg>
    <templarg>typename StateAllocator</templarg>
    <member kind="function">
      <type></type>
      <name>GenericSchemaValidator</name>
      <anchorfile>classrapidjson_1_1_generic_schema_validator.html</anchorfile>
      <anchor>acc07bd08b00195d84bb5b83f59c593d3</anchor>
      <arglist>(const SchemaDocumentType &amp;schemaDocument, StateAllocator *allocator=0, size_t schemaStackCapacity=kDefaultSchemaStackCapacity, size_t documentStackCapacity=kDefaultDocumentStackCapacity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericSchemaValidator</name>
      <anchorfile>classrapidjson_1_1_generic_schema_validator.html</anchorfile>
      <anchor>a0e1d8f19381bd53d77cc00a9a6dcd067</anchor>
      <arglist>(const SchemaDocumentType &amp;schemaDocument, OutputHandler &amp;outputHandler, StateAllocator *allocator=0, size_t schemaStackCapacity=kDefaultSchemaStackCapacity, size_t documentStackCapacity=kDefaultDocumentStackCapacity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GenericSchemaValidator</name>
      <anchorfile>classrapidjson_1_1_generic_schema_validator.html</anchorfile>
      <anchor>ad9f00d71bf62b8983cf2514c43fb1572</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>classrapidjson_1_1_generic_schema_validator.html</anchorfile>
      <anchor>afe6cd0d9088a1d4cf8100c0efc9f76fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetError</name>
      <anchorfile>classrapidjson_1_1_generic_schema_validator.html</anchorfile>
      <anchor>aab6478132518857d1bb2bc66c0dd03e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetValidateFlags</name>
      <anchorfile>classrapidjson_1_1_generic_schema_validator.html</anchorfile>
      <anchor>ab521826cfc7ca994856323f9f1420d66</anchor>
      <arglist>(unsigned flags)</arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>GetError</name>
      <anchorfile>classrapidjson_1_1_generic_schema_validator.html</anchorfile>
      <anchor>a8c1c15cd52643a47e349126e9ad9b404</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PointerType</type>
      <name>GetInvalidSchemaPointer</name>
      <anchorfile>classrapidjson_1_1_generic_schema_validator.html</anchorfile>
      <anchor>a3238efb9d9144c2d6577362d8dc5f61b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Ch *</type>
      <name>GetInvalidSchemaKeyword</name>
      <anchorfile>classrapidjson_1_1_generic_schema_validator.html</anchorfile>
      <anchor>a8334fc63f8409c96b6a83b3e822d77f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ValidateErrorCode</type>
      <name>GetInvalidSchemaCode</name>
      <anchorfile>classrapidjson_1_1_generic_schema_validator.html</anchorfile>
      <anchor>a317d19322b003b8f4b87cad467775029</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PointerType</type>
      <name>GetInvalidDocumentPointer</name>
      <anchorfile>classrapidjson_1_1_generic_schema_validator.html</anchorfile>
      <anchor>a60dfb4a89593c8d3ca4c89a6202feb52</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rapidjson::GenericStreamWrapper</name>
    <filename>classrapidjson_1_1_generic_stream_wrapper.html</filename>
    <templarg>typename InputStream</templarg>
    <templarg>typename Encoding</templarg>
  </compound>
  <compound kind="class">
    <name>rapidjson::GenericStringBuffer</name>
    <filename>classrapidjson_1_1_generic_string_buffer.html</filename>
    <templarg>typename Encoding</templarg>
    <templarg>typename Allocator</templarg>
    <member kind="function">
      <type>size_t</type>
      <name>GetSize</name>
      <anchorfile>classrapidjson_1_1_generic_string_buffer.html</anchorfile>
      <anchor>a9d830ec37a4ba0fba3b523c90aaf8b42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetLength</name>
      <anchorfile>classrapidjson_1_1_generic_string_buffer.html</anchorfile>
      <anchor>a0a114be213152d570a2d9fde7a28fe11</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rapidjson::GenericStringRef</name>
    <filename>structrapidjson_1_1_generic_string_ref.html</filename>
    <templarg>typename CharType</templarg>
    <member kind="typedef">
      <type>CharType</type>
      <name>Ch</name>
      <anchorfile>structrapidjson_1_1_generic_string_ref.html</anchorfile>
      <anchor>aa2a8eccae3d7eb14c30bc21afb7d6fba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericStringRef</name>
      <anchorfile>structrapidjson_1_1_generic_string_ref.html</anchorfile>
      <anchor>acd4d5ebac2b610ce647356aa52998002</anchor>
      <arglist>(const CharType(&amp;str)[N]) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericStringRef</name>
      <anchorfile>structrapidjson_1_1_generic_string_ref.html</anchorfile>
      <anchor>a29cf407c6aa2313f13dff78d6ce02687</anchor>
      <arglist>(const CharType *str)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericStringRef</name>
      <anchorfile>structrapidjson_1_1_generic_string_ref.html</anchorfile>
      <anchor>ad9eb120a58cee500ff3bd5706779c4e4</anchor>
      <arglist>(const CharType *str, SizeType len)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const Ch *</name>
      <anchorfile>structrapidjson_1_1_generic_string_ref.html</anchorfile>
      <anchor>a86d30bb594a41619a7a5ba6c8dcce2bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>const Ch *const</type>
      <name>s</name>
      <anchorfile>structrapidjson_1_1_generic_string_ref.html</anchorfile>
      <anchor>a001276ee57cbcbd3c14449045c71e994</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SizeType</type>
      <name>length</name>
      <anchorfile>structrapidjson_1_1_generic_string_ref.html</anchorfile>
      <anchor>ae223535ec20edf0c1db44a40b7735111</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>GenericStringRef&lt; CharType &gt;</type>
      <name>StringRef</name>
      <anchorfile>structrapidjson_1_1_generic_string_ref.html</anchorfile>
      <anchor>aa6b9fd9f6aa49405a574c362ba9af6b5</anchor>
      <arglist>(const CharType *str)</arglist>
    </member>
    <member kind="function">
      <type>GenericStringRef&lt; CharType &gt;</type>
      <name>StringRef</name>
      <anchorfile>structrapidjson_1_1_generic_string_ref.html</anchorfile>
      <anchor>a578c51ab574a50a9c760b9da7c7562f2</anchor>
      <arglist>(const CharType *str, size_t length)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rapidjson::GenericStringStream</name>
    <filename>structrapidjson_1_1_generic_string_stream.html</filename>
    <templarg>typename Encoding</templarg>
    <member kind="variable">
      <type>const Ch *</type>
      <name>src_</name>
      <anchorfile>structrapidjson_1_1_generic_string_stream.html</anchorfile>
      <anchor>a9a38a9d5b1ce782cacd4ec1bdf87fc2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Ch *</type>
      <name>head_</name>
      <anchorfile>structrapidjson_1_1_generic_string_stream.html</anchorfile>
      <anchor>a2556705b0a0fd6393862efe6db025b32</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rapidjson::GenericUri</name>
    <filename>classrapidjson_1_1_generic_uri.html</filename>
    <templarg>typename ValueType</templarg>
    <templarg>typename Allocator</templarg>
    <member kind="function">
      <type></type>
      <name>GenericUri</name>
      <anchorfile>classrapidjson_1_1_generic_uri.html</anchorfile>
      <anchor>a9c50e92fc8ce43765718ea7a7e9d4067</anchor>
      <arglist>(Allocator *allocator=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericUri</name>
      <anchorfile>classrapidjson_1_1_generic_uri.html</anchorfile>
      <anchor>a28bd97cbdd5be5d8be19c40729294a06</anchor>
      <arglist>(const GenericUri &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericUri</name>
      <anchorfile>classrapidjson_1_1_generic_uri.html</anchorfile>
      <anchor>ad8391135ba2c5a5c2d6aed049055b7f9</anchor>
      <arglist>(const GenericUri &amp;rhs, Allocator *allocator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GenericUri</name>
      <anchorfile>classrapidjson_1_1_generic_uri.html</anchorfile>
      <anchor>a8add2c681f1fd8d4c1e39115ea63a1a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GenericUri &amp;</type>
      <name>operator=</name>
      <anchorfile>classrapidjson_1_1_generic_uri.html</anchorfile>
      <anchor>abb9f1e1d6d3cb85ec9fcafa28c5d59ef</anchor>
      <arglist>(const GenericUri &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Get</name>
      <anchorfile>classrapidjson_1_1_generic_uri.html</anchorfile>
      <anchor>a461ed0189ee852ac237b3d01b0848a60</anchor>
      <arglist>(T &amp;uri, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classrapidjson_1_1_generic_uri.html</anchorfile>
      <anchor>a133b60f9bada94cdc82a7fdaeb66c428</anchor>
      <arglist>(const GenericUri &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>GenericUri</type>
      <name>Resolve</name>
      <anchorfile>classrapidjson_1_1_generic_uri.html</anchorfile>
      <anchor>a9a91f109254beb16d3cda1c8bb3a55be</anchor>
      <arglist>(const GenericUri &amp;baseuri, Allocator *allocator=0)</arglist>
    </member>
    <member kind="function">
      <type>Allocator &amp;</type>
      <name>GetAllocator</name>
      <anchorfile>classrapidjson_1_1_generic_uri.html</anchorfile>
      <anchor>a4defe9bdb5b273c134f0bda3d6c76791</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rapidjson::GenericValue</name>
    <filename>classrapidjson_1_1_generic_value.html</filename>
    <templarg>typename Encoding</templarg>
    <templarg>typename Allocator</templarg>
    <member kind="typedef">
      <type>GenericMember&lt; Encoding, Allocator &gt;</type>
      <name>Member</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a0220ddebe2f023fa75b643a50e90e559</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Encoding</type>
      <name>EncodingType</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a05906384808645a2e798d29a9b2d441d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Allocator</type>
      <name>AllocatorType</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a5d47340c96346c5028fee4c9068d783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Encoding::Ch</type>
      <name>Ch</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>adcdbc7fa85a9a41b78966d7e0dcc2ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericStringRef&lt; Ch &gt;</type>
      <name>StringRefType</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a559eb9cea54364a35518b02f6d74f379</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericMemberIterator&lt; false, Encoding, Allocator &gt;::Iterator</type>
      <name>MemberIterator</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>aca5596987335016c1a7c2a9467baf80b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericMemberIterator&lt; true, Encoding, Allocator &gt;::Iterator</type>
      <name>ConstMemberIterator</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a6cd2b09795c48d2892bebc0ae350d51f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericValue *</type>
      <name>ValueIterator</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a06ce0e14ec83b53c83e1b1699b53a25e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const GenericValue *</type>
      <name>ConstValueIterator</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a89a6588121742fc3f154b10b8f15f45f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericValue&lt; Encoding, Allocator &gt;</type>
      <name>ValueType</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ad2935191ab28c2c2e472b739a9d58202</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBool</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a78d80b935babeedbfa71914a8fe5baa7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>SetBool</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a5f0b4d005817342f962f12620fc74d5a</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>SetObject</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a1731f969985e557519d21d33c6f409d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SizeType</type>
      <name>MemberCount</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a8b7e47c57a20d0de0cd19eee799ebd88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SizeType</type>
      <name>MemberCapacity</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>af2a406c67f2d6a7849f0c167025827b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ObjectEmpty</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a1f4835373e05abae52b91e1c6b7ec92c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>operator[]</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ac6671822744fb5991be58c48822c8fdf</anchor>
      <arglist>(T *name)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>operator[]</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a8a327edab2ae9678985a3c85166a1bb0</anchor>
      <arglist>(const GenericValue&lt; Encoding, SourceAllocator &gt; &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>ConstMemberIterator</type>
      <name>MemberBegin</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ae89a77887aa3eb1f1f913727cbff6786</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConstMemberIterator</type>
      <name>MemberEnd</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a34ee3d75a7aa308043fb34b0743bfe7c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MemberIterator</type>
      <name>MemberBegin</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a93f0f317f397c36a24a0f3c32648623a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MemberIterator</type>
      <name>MemberEnd</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>adb109ae9f12615efadf9277cb5e9c4ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>MemberReserve</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a8f9b041f83b8282922cb7464e4e30d74</anchor>
      <arglist>(SizeType newCapacity, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>aa78e2eb30c6b918826eccf03f04f166b</anchor>
      <arglist>(const Ch *name) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a794129b8adffb97d123306a0c0ccaf71</anchor>
      <arglist>(const GenericValue&lt; Encoding, SourceAllocator &gt; &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>MemberIterator</type>
      <name>FindMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ad22fdeac87ec6c370dd43075d3586811</anchor>
      <arglist>(const Ch *name)</arglist>
    </member>
    <member kind="function">
      <type>MemberIterator</type>
      <name>FindMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a8d75bf0c6c0fa4f8d340a4236e98539b</anchor>
      <arglist>(const GenericValue&lt; Encoding, SourceAllocator &gt; &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>AddMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a47f607190102ca28abaa1ce1133dcfae</anchor>
      <arglist>(GenericValue &amp;name, GenericValue &amp;value, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>AddMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>aecf043e60f84e11f3656c4c3fad1ac17</anchor>
      <arglist>(GenericValue &amp;name, StringRefType value, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>AddMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>afd2b2648f8232c035d6fe2c1a2d6bb9e</anchor>
      <arglist>(GenericValue &amp;name, T value, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>AddMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a6b608e37e920ddc95f2a0332d62b4ca2</anchor>
      <arglist>(StringRefType name, GenericValue &amp;value, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>AddMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a624fa3c206636a1ee8b3c34eb2402c10</anchor>
      <arglist>(StringRefType name, StringRefType value, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>AddMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a84736b860c3f931212dca7f4d5db64c0</anchor>
      <arglist>(StringRefType name, T value, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAllMembers</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a68d8d197ae1fb83d4dc202f9812af4cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>aa60074f72a6d1651828a104b0c6387b1</anchor>
      <arglist>(const Ch *name)</arglist>
    </member>
    <member kind="function">
      <type>MemberIterator</type>
      <name>RemoveMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>af91573ce61d798f0bc5dc88b00742697</anchor>
      <arglist>(MemberIterator m)</arglist>
    </member>
    <member kind="function">
      <type>MemberIterator</type>
      <name>EraseMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a163e60b101e5ae534597c050a6eba511</anchor>
      <arglist>(ConstMemberIterator pos)</arglist>
    </member>
    <member kind="function">
      <type>MemberIterator</type>
      <name>EraseMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a121e40b5944be337189eb63b98b7e6ce</anchor>
      <arglist>(ConstMemberIterator first, ConstMemberIterator last)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EraseMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ac51a3b3046aaa12aa1d88ac876a28cec</anchor>
      <arglist>(const Ch *name)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetDouble</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>aa27d086d265f0ce447b15b15f0a2ed6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetFloat</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a573712808dd5d8814c103cf55fd761b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SizeType</type>
      <name>GetStringLength</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a18599e0d1a7e70a11b35f5e219390fea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>SetString</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ab5da0559dab299f6790d223190870e5a</anchor>
      <arglist>(const Ch *s, SizeType length)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>SetString</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a2678c808449447f9aa753552367be2bd</anchor>
      <arglist>(StringRefType s)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>SetString</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ad5fab3ea017700637b099262960d8f02</anchor>
      <arglist>(const Ch *s, SizeType length, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>SetString</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a05c10cd07363b30ae2285f49f4373a79</anchor>
      <arglist>(const Ch *s, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>SetString</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>af9bab5ab5f090d76ceeece28d22776c3</anchor>
      <arglist>(StringRefType s, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>SetArray</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a4fc5ba0ad8723ded9194d1f0576d9895</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SizeType</type>
      <name>Size</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a799a8a2503989f486f3fc7a660266555</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SizeType</type>
      <name>Capacity</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a812e5c07f74a90566e7636330740eb6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Empty</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ad08a62c65a793ab1d0abe7eac03776fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>aa56b69bac5423622eff6998ce4802106</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>operator[]</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ac99cb43a20f12d9af0cbb7961cf98c94</anchor>
      <arglist>(SizeType index)</arglist>
    </member>
    <member kind="function">
      <type>ValueIterator</type>
      <name>Begin</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a8d1040c479d89edb261db86400ebe603</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ValueIterator</type>
      <name>End</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>aaf58b9337ccc0cdf16aa9634c4645109</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstValueIterator</type>
      <name>Begin</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a07d947971c59c9ce884b3c5205c9238f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConstValueIterator</type>
      <name>End</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>abdd6a3b703a03aada4c186a2365698e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>Reserve</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a4f098ac0ea6de159549e749fd9c6f7dc</anchor>
      <arglist>(SizeType newCapacity, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>PushBack</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a3ebbb94635930975177cd5240006901b</anchor>
      <arglist>(GenericValue &amp;value, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>PushBack</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a8a5d91d63e193c0b501b1c184d55f5f6</anchor>
      <arglist>(StringRefType value, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>PushBack</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a5bbe43b9d7729974681a285d6a978b48</anchor>
      <arglist>(T value, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>PopBack</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a5044e62f7b610f58c108883331aa5bd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ValueIterator</type>
      <name>Erase</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a68ba73eeda7b9429ca05267065d3cc99</anchor>
      <arglist>(ConstValueIterator pos)</arglist>
    </member>
    <member kind="function">
      <type>ValueIterator</type>
      <name>Erase</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a916f443e02f9379d8fbde49a4d440f61</anchor>
      <arglist>(ConstValueIterator first, ConstValueIterator last)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Is</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>acc6b1791cca8daef18521918136264b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Accept</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ad3ebfa73796f4db4836ec47c2261700c</anchor>
      <arglist>(Handler &amp;handler) const</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a58ecce8a34fc029039b8079de246bdaa</anchor>
      <arglist>(GenericValue &amp;a, GenericValue &amp;b) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>operator=</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a37fa30cf48e0a0724a8e7323fc2fef41</anchor>
      <arglist>(GenericValue &amp;rhs) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>operator=</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a07e7550d44739a59555bc78f67716657</anchor>
      <arglist>(StringRefType str) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>operator=</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a46acbe61b2da32eb737be45db8678ac6</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>CopyFrom</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a9e1a4c6a7a56f9fed74907394baa88d5</anchor>
      <arglist>(const GenericValue&lt; Encoding, SourceAllocator &gt; &amp;rhs, Allocator &amp;allocator, bool copyConstStrings=false)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>Swap</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a60fc0ca2a1aa00cec7c6984749296b82</anchor>
      <arglist>(GenericValue &amp;other) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>Move</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a3bf1279b8ebb55e0f172af2c3889d867</anchor>
      <arglist>() RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator==</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>aaa465706fda1e1ef4513ce877e0b4b69</anchor>
      <arglist>(const T &amp;lhs, const GenericValue &amp;rhs)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator!=</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ae08898bef949f217f0e5d28e19f05992</anchor>
      <arglist>(const T &amp;lhs, const GenericValue &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ab4e5285102bb686f39bca2855a17a181</anchor>
      <arglist>(const GenericValue&lt; Encoding, SourceAllocator &gt; &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>af03ef6020e188bbfceb018da5cd8becc</anchor>
      <arglist>(const Ch *rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>aaddbbbb35cd783f209f889cf8dea9570</anchor>
      <arglist>(const T &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ad5bf5afd53f21f370f917041b3be4bfc</anchor>
      <arglist>(const GenericValue&lt; Encoding, SourceAllocator &gt; &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a6443cf5323fb46c4c51cd15a365da49b</anchor>
      <arglist>(const Ch *rhs) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ae6fe0576ff0336f6e2b09fe32f3ff809</anchor>
      <arglist>(const T &amp;rhs) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericValue</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ad1f8199e65662e0d52a13a1577d4e4a5</anchor>
      <arglist>() RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericValue</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a646b6d4d3d98799a0926d96ffa127a58</anchor>
      <arglist>(Type type) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericValue</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>adca019775f68f012643781cd2c2515ac</anchor>
      <arglist>(const GenericValue&lt; Encoding, SourceAllocator &gt; &amp;rhs, Allocator &amp;allocator, bool copyConstStrings=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericValue</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ab933ad7ff8c9d08f73cebaecb700dbe9</anchor>
      <arglist>(bool b) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericValue</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>abba0c9ccfd90726f916c36013a2e9e19</anchor>
      <arglist>(int i) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericValue</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a4a8060a42b7953a2981ad892180ca5a6</anchor>
      <arglist>(unsigned u) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericValue</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>acd4ae9a8dba4498d1d7cce6667529bb8</anchor>
      <arglist>(int64_t i64) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericValue</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a1f125e735577aae64c0306345de45563</anchor>
      <arglist>(uint64_t u64) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericValue</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a71b9e2ec1f7bf9e2f034126ca7b4945a</anchor>
      <arglist>(double d) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericValue</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>afe94e5e86a5b1a3fb605a9f8422f048b</anchor>
      <arglist>(float f) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericValue</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a51e93a4fb57f77a39767acb076bf43c1</anchor>
      <arglist>(const Ch *s, SizeType length) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericValue</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a65bfc3073fa80ee5eba8e985abe2f941</anchor>
      <arglist>(StringRefType s) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericValue</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ad9553bb9ccbfd19547c473a95405a8b2</anchor>
      <arglist>(const Ch *s, SizeType length, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericValue</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a83ba61e8a5170c2e172fd60ebc11016f</anchor>
      <arglist>(const Ch *s, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericValue</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a77b0f41557b3c34b57a180698312c4a8</anchor>
      <arglist>(Array a) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenericValue</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a893da1069660536fd3943a0149206a6e</anchor>
      <arglist>(Object o) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GenericValue</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a433a64b466c80cadf7d1acaa6f065437</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetBool</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a78d80b935babeedbfa71914a8fe5baa7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>SetBool</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a5f0b4d005817342f962f12620fc74d5a</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>SetObject</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a1731f969985e557519d21d33c6f409d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SizeType</type>
      <name>MemberCount</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a8b7e47c57a20d0de0cd19eee799ebd88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SizeType</type>
      <name>MemberCapacity</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>af2a406c67f2d6a7849f0c167025827b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ObjectEmpty</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a1f4835373e05abae52b91e1c6b7ec92c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>operator[]</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ac6671822744fb5991be58c48822c8fdf</anchor>
      <arglist>(T *name)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>operator[]</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a8a327edab2ae9678985a3c85166a1bb0</anchor>
      <arglist>(const GenericValue&lt; Encoding, SourceAllocator &gt; &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>ConstMemberIterator</type>
      <name>MemberBegin</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ae89a77887aa3eb1f1f913727cbff6786</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConstMemberIterator</type>
      <name>MemberEnd</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a34ee3d75a7aa308043fb34b0743bfe7c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MemberIterator</type>
      <name>MemberBegin</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a93f0f317f397c36a24a0f3c32648623a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MemberIterator</type>
      <name>MemberEnd</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>adb109ae9f12615efadf9277cb5e9c4ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>MemberReserve</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a8f9b041f83b8282922cb7464e4e30d74</anchor>
      <arglist>(SizeType newCapacity, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>aa78e2eb30c6b918826eccf03f04f166b</anchor>
      <arglist>(const Ch *name) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a794129b8adffb97d123306a0c0ccaf71</anchor>
      <arglist>(const GenericValue&lt; Encoding, SourceAllocator &gt; &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>MemberIterator</type>
      <name>FindMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ad22fdeac87ec6c370dd43075d3586811</anchor>
      <arglist>(const Ch *name)</arglist>
    </member>
    <member kind="function">
      <type>MemberIterator</type>
      <name>FindMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a8d75bf0c6c0fa4f8d340a4236e98539b</anchor>
      <arglist>(const GenericValue&lt; Encoding, SourceAllocator &gt; &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>AddMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a47f607190102ca28abaa1ce1133dcfae</anchor>
      <arglist>(GenericValue &amp;name, GenericValue &amp;value, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>AddMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>aecf043e60f84e11f3656c4c3fad1ac17</anchor>
      <arglist>(GenericValue &amp;name, StringRefType value, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>AddMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>afd2b2648f8232c035d6fe2c1a2d6bb9e</anchor>
      <arglist>(GenericValue &amp;name, T value, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>AddMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a6b608e37e920ddc95f2a0332d62b4ca2</anchor>
      <arglist>(StringRefType name, GenericValue &amp;value, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>AddMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a624fa3c206636a1ee8b3c34eb2402c10</anchor>
      <arglist>(StringRefType name, StringRefType value, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>AddMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a84736b860c3f931212dca7f4d5db64c0</anchor>
      <arglist>(StringRefType name, T value, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAllMembers</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a68d8d197ae1fb83d4dc202f9812af4cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>aa60074f72a6d1651828a104b0c6387b1</anchor>
      <arglist>(const Ch *name)</arglist>
    </member>
    <member kind="function">
      <type>MemberIterator</type>
      <name>RemoveMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>af91573ce61d798f0bc5dc88b00742697</anchor>
      <arglist>(MemberIterator m)</arglist>
    </member>
    <member kind="function">
      <type>MemberIterator</type>
      <name>EraseMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a163e60b101e5ae534597c050a6eba511</anchor>
      <arglist>(ConstMemberIterator pos)</arglist>
    </member>
    <member kind="function">
      <type>MemberIterator</type>
      <name>EraseMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a121e40b5944be337189eb63b98b7e6ce</anchor>
      <arglist>(ConstMemberIterator first, ConstMemberIterator last)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EraseMember</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ac51a3b3046aaa12aa1d88ac876a28cec</anchor>
      <arglist>(const Ch *name)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetDouble</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>aa27d086d265f0ce447b15b15f0a2ed6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetFloat</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a573712808dd5d8814c103cf55fd761b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SizeType</type>
      <name>GetStringLength</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a18599e0d1a7e70a11b35f5e219390fea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>SetString</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ab5da0559dab299f6790d223190870e5a</anchor>
      <arglist>(const Ch *s, SizeType length)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>SetString</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a2678c808449447f9aa753552367be2bd</anchor>
      <arglist>(StringRefType s)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>SetString</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>ad5fab3ea017700637b099262960d8f02</anchor>
      <arglist>(const Ch *s, SizeType length, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>SetString</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>a05c10cd07363b30ae2285f49f4373a79</anchor>
      <arglist>(const Ch *s, Allocator &amp;allocator)</arglist>
    </member>
    <member kind="function">
      <type>GenericValue &amp;</type>
      <name>SetString</name>
      <anchorfile>classrapidjson_1_1_generic_value.html</anchorfile>
      <anchor>af9bab5ab5f090d76ceeece28d22776c3</anchor>
      <arglist>(StringRefType s, Allocator &amp;allocator)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rapidjson::Handler</name>
    <filename>classrapidjson_1_1_handler.html</filename>
  </compound>
  <compound kind="struct">
    <name>rapidjson::GenericValue::Number::I</name>
    <filename>structrapidjson_1_1_generic_value_1_1_number_1_1_i.html</filename>
  </compound>
  <compound kind="class">
    <name>rapidjson::IGenericRemoteSchemaDocumentProvider</name>
    <filename>classrapidjson_1_1_i_generic_remote_schema_document_provider.html</filename>
    <templarg>typename SchemaDocumentType</templarg>
  </compound>
  <compound kind="struct">
    <name>rapidjson::Writer::Level</name>
    <filename>structrapidjson_1_1_writer_1_1_level.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>valueCount</name>
      <anchorfile>structrapidjson_1_1_writer_1_1_level.html</anchorfile>
      <anchor>a5d17bdfa9ded5de72f5f91175cc3e36b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inArray</name>
      <anchorfile>structrapidjson_1_1_writer_1_1_level.html</anchorfile>
      <anchor>a59255e3b1d371161f7c894503cfd6bec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rapidjson::MemoryPoolAllocator</name>
    <filename>classrapidjson_1_1_memory_pool_allocator.html</filename>
    <templarg>typename BaseAllocator</templarg>
    <member kind="function">
      <type></type>
      <name>MemoryPoolAllocator</name>
      <anchorfile>classrapidjson_1_1_memory_pool_allocator.html</anchorfile>
      <anchor>a59d783f4feba17dcd35d9f25fcbc09f4</anchor>
      <arglist>(size_t chunkSize=kDefaultChunkCapacity, BaseAllocator *baseAllocator=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MemoryPoolAllocator</name>
      <anchorfile>classrapidjson_1_1_memory_pool_allocator.html</anchorfile>
      <anchor>abcc572bdb6902c9d69711540db5098a7</anchor>
      <arglist>(void *buffer, size_t size, size_t chunkSize=kDefaultChunkCapacity, BaseAllocator *baseAllocator=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MemoryPoolAllocator</name>
      <anchorfile>classrapidjson_1_1_memory_pool_allocator.html</anchorfile>
      <anchor>aa5b6810e88de0c46390525cd3a0bd700</anchor>
      <arglist>() RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classrapidjson_1_1_memory_pool_allocator.html</anchorfile>
      <anchor>afa5935b0dc40420085822bdb5a3f2840</anchor>
      <arglist>() RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Capacity</name>
      <anchorfile>classrapidjson_1_1_memory_pool_allocator.html</anchorfile>
      <anchor>acf80d2330d6ae72643674a95ac62c0bd</anchor>
      <arglist>() const RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Size</name>
      <anchorfile>classrapidjson_1_1_memory_pool_allocator.html</anchorfile>
      <anchor>ab7368f377dafc0ecad2c59814cdfe265</anchor>
      <arglist>() const RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Shared</name>
      <anchorfile>classrapidjson_1_1_memory_pool_allocator.html</anchorfile>
      <anchor>af1a56b28d5e0d75b628d448ceacd41fc</anchor>
      <arglist>() const RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>Malloc</name>
      <anchorfile>classrapidjson_1_1_memory_pool_allocator.html</anchorfile>
      <anchor>a4b63701ff61e8a10adcb1439cf34c59c</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>Realloc</name>
      <anchorfile>classrapidjson_1_1_memory_pool_allocator.html</anchorfile>
      <anchor>a81ecf9da77551177fcbec63bb91ee237</anchor>
      <arglist>(void *originalPtr, size_t originalSize, size_t newSize)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classrapidjson_1_1_memory_pool_allocator.html</anchorfile>
      <anchor>aaadeb62f04e430ae1254a7e69d54d724</anchor>
      <arglist>(const MemoryPoolAllocator &amp;rhs) const RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classrapidjson_1_1_memory_pool_allocator.html</anchorfile>
      <anchor>ada927b87fb5640124aefeb07e3e23c99</anchor>
      <arglist>(const MemoryPoolAllocator &amp;rhs) const RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Free</name>
      <anchorfile>classrapidjson_1_1_memory_pool_allocator.html</anchorfile>
      <anchor>a199ce203dde7f2b364b6b844a8af04ec</anchor>
      <arglist>(void *ptr) RAPIDJSON_NOEXCEPT</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>kNeedFree</name>
      <anchorfile>classrapidjson_1_1_memory_pool_allocator.html</anchorfile>
      <anchor>a2606d96e19bcfc9d4bf58aefe55c1b29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>kRefCounted</name>
      <anchorfile>classrapidjson_1_1_memory_pool_allocator.html</anchorfile>
      <anchor>a285002fe7283af29c222adf63c9c6496</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rapidjson::MemoryStream</name>
    <filename>structrapidjson_1_1_memory_stream.html</filename>
    <member kind="variable">
      <type>const Ch *</type>
      <name>src_</name>
      <anchorfile>structrapidjson_1_1_memory_stream.html</anchorfile>
      <anchor>ac0b4da6016e5ba6241604fd4258fb722</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Ch *</type>
      <name>begin_</name>
      <anchorfile>structrapidjson_1_1_memory_stream.html</anchorfile>
      <anchor>a1cc586e50fbfc0bd5994977b42243b93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Ch *</type>
      <name>end_</name>
      <anchorfile>structrapidjson_1_1_memory_stream.html</anchorfile>
      <anchor>a47f45298891e8156121b4017954fabe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>size_</name>
      <anchorfile>structrapidjson_1_1_memory_stream.html</anchorfile>
      <anchor>a8c8437d59c32168a74226312d9e96ace</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rapidjson::ParseResult</name>
    <filename>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</filename>
    <anchor>structrapidjson_1_1_parse_result</anchor>
    <member kind="typedef">
      <type>bool(ParseResult::*</type>
      <name>BooleanType</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>aff2daa285445bba8f76578ea274e34a3</anchor>
      <arglist>)() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParseResult</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>a0f03679d5fa2736d9e351541e767fac1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParseResult</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ad15710045513f13ba526753c4a2cb59b</anchor>
      <arglist>(ParseErrorCode code, size_t offset)</arglist>
    </member>
    <member kind="function">
      <type>ParseErrorCode</type>
      <name>Code</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>a3c6a1f7b7dc21363a255eb10a3c0e00e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Offset</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>a85036788b0cfd1c676900de6f8260bd6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BooleanType</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>af0936ace1dc9b674e9afb75ec6145b32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsError</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ab6d87c6ce9c849f35e902fbe23f485c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>a17c9f7f81675283393222658d613000f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>a40c0bd4d6c535c57acbb5c2e656bea38</anchor>
      <arglist>(ParseErrorCode code, size_t offset=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rapidjson::PrettyWriter</name>
    <filename>classrapidjson_1_1_pretty_writer.html</filename>
    <templarg>typename OutputStream</templarg>
    <templarg>typename SourceEncoding</templarg>
    <templarg>typename TargetEncoding</templarg>
    <templarg>typename StackAllocator</templarg>
    <templarg>unsigned writeFlags</templarg>
    <base>rapidjson::Writer</base>
    <member kind="function">
      <type></type>
      <name>PrettyWriter</name>
      <anchorfile>classrapidjson_1_1_pretty_writer.html</anchorfile>
      <anchor>a688d7ebf5c8015e423b7a970afc8e0a0</anchor>
      <arglist>(OutputStream &amp;os, StackAllocator *allocator=0, size_t levelDepth=Base::kDefaultLevelDepth)</arglist>
    </member>
    <member kind="function">
      <type>PrettyWriter &amp;</type>
      <name>SetIndent</name>
      <anchorfile>classrapidjson_1_1_pretty_writer.html</anchorfile>
      <anchor>a3df0ae89777b082aca183f12d0b113d5</anchor>
      <arglist>(Ch indentChar, unsigned indentCharCount)</arglist>
    </member>
    <member kind="function">
      <type>PrettyWriter &amp;</type>
      <name>SetFormatOptions</name>
      <anchorfile>classrapidjson_1_1_pretty_writer.html</anchorfile>
      <anchor>a386a343a81d99b5b21800520912ebcfb</anchor>
      <arglist>(PrettyFormatOptions options)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>String</name>
      <anchorfile>classrapidjson_1_1_pretty_writer.html</anchorfile>
      <anchor>a363c2280393e27e19bceb8d015c2832c</anchor>
      <arglist>(const Ch *str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RawValue</name>
      <anchorfile>classrapidjson_1_1_pretty_writer.html</anchorfile>
      <anchor>a3136e3426a5d06e5da50f6e6aab8a5be</anchor>
      <arglist>(const Ch *json, size_t length, Type type)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rapidjson::StdAllocator::rebind</name>
    <filename>structrapidjson_1_1_std_allocator_1_1rebind.html</filename>
    <templarg>typename U</templarg>
  </compound>
  <compound kind="struct">
    <name>rapidjson::StdAllocator&lt; void, BaseAllocator &gt;::rebind</name>
    <filename>structrapidjson_1_1_std_allocator_3_01void_00_01_base_allocator_01_4_1_1rebind.html</filename>
    <templarg>typename U</templarg>
  </compound>
  <compound kind="class">
    <name>rapidjson::SchemaValidatingReader</name>
    <filename>classrapidjson_1_1_schema_validating_reader.html</filename>
    <templarg>unsigned parseFlags</templarg>
    <templarg>typename InputStream</templarg>
    <templarg>typename SourceEncoding</templarg>
    <templarg>typename SchemaDocumentType</templarg>
    <templarg>typename StackAllocator</templarg>
    <member kind="function">
      <type></type>
      <name>SchemaValidatingReader</name>
      <anchorfile>classrapidjson_1_1_schema_validating_reader.html</anchorfile>
      <anchor>a1e2bcc66cad23376241cd91e8bf8c706</anchor>
      <arglist>(InputStream &amp;is, const SchemaDocumentType &amp;sd)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rapidjson::Specification</name>
    <filename>structrapidjson_1_1_specification.html</filename>
  </compound>
  <compound kind="class">
    <name>rapidjson::StdAllocator</name>
    <filename>classrapidjson_1_1_std_allocator.html</filename>
    <templarg>typename T</templarg>
    <templarg>typename BaseAllocator</templarg>
    <class kind="struct">rapidjson::StdAllocator::rebind</class>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>kNeedFree</name>
      <anchorfile>classrapidjson_1_1_std_allocator.html</anchorfile>
      <anchor>a000e9708918f813fc151020c0a03c62c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>rapidjson::StdAllocator&lt; void, BaseAllocator &gt;</name>
    <filename>classrapidjson_1_1_std_allocator_3_01void_00_01_base_allocator_01_4.html</filename>
    <templarg>typename BaseAllocator</templarg>
    <class kind="struct">rapidjson::StdAllocator&lt; void, BaseAllocator &gt;::rebind</class>
  </compound>
  <compound kind="class">
    <name>rapidjson::Stream</name>
    <filename>classrapidjson_1_1_stream.html</filename>
  </compound>
  <compound kind="struct">
    <name>rapidjson::StreamTraits</name>
    <filename>structrapidjson_1_1_stream_traits.html</filename>
    <templarg>typename Stream</templarg>
  </compound>
  <compound kind="struct">
    <name>rapidjson::StreamTraits&lt; GenericInsituStringStream&lt; Encoding &gt; &gt;</name>
    <filename>structrapidjson_1_1_stream_traits_3_01_generic_insitu_string_stream_3_01_encoding_01_4_01_4.html</filename>
    <templarg>typename Encoding</templarg>
  </compound>
  <compound kind="struct">
    <name>rapidjson::StreamTraits&lt; GenericStringStream&lt; Encoding &gt; &gt;</name>
    <filename>structrapidjson_1_1_stream_traits_3_01_generic_string_stream_3_01_encoding_01_4_01_4.html</filename>
    <templarg>typename Encoding</templarg>
  </compound>
  <compound kind="struct">
    <name>rapidjson::GenericPointer::Token</name>
    <filename>structrapidjson_1_1_generic_pointer_1_1_token.html</filename>
    <member kind="variable">
      <type>const Ch *</type>
      <name>name</name>
      <anchorfile>structrapidjson_1_1_generic_pointer_1_1_token.html</anchorfile>
      <anchor>aceb59c9796418c20da27b03bf1948fe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SizeType</type>
      <name>length</name>
      <anchorfile>structrapidjson_1_1_generic_pointer_1_1_token.html</anchorfile>
      <anchor>ad866d674dbddf9690ad571b65e968600</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SizeType</type>
      <name>index</name>
      <anchorfile>structrapidjson_1_1_generic_pointer_1_1_token.html</anchorfile>
      <anchor>a50331c9e3dedc34d2c79745b2e58fb2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rapidjson::Transcoder</name>
    <filename>structrapidjson_1_1_transcoder.html</filename>
    <templarg>typename SourceEncoding</templarg>
    <templarg>typename TargetEncoding</templarg>
    <member kind="function" static="yes">
      <type>static RAPIDJSON_FORCEINLINE bool</type>
      <name>Transcode</name>
      <anchorfile>structrapidjson_1_1_transcoder.html</anchorfile>
      <anchor>a3a1de7069d3cf7f1d4f4e2f96ceb7664</anchor>
      <arglist>(InputStream &amp;is, OutputStream &amp;os)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RAPIDJSON_FORCEINLINE bool</type>
      <name>Validate</name>
      <anchorfile>structrapidjson_1_1_transcoder.html</anchorfile>
      <anchor>ae9178e512e99394a38785e73927140da</anchor>
      <arglist>(InputStream &amp;is, OutputStream &amp;os)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rapidjson::Transcoder&lt; Encoding, Encoding &gt;</name>
    <filename>structrapidjson_1_1_transcoder_3_01_encoding_00_01_encoding_01_4.html</filename>
    <templarg>typename Encoding</templarg>
  </compound>
  <compound kind="struct">
    <name>rapidjson::GenericValue::Number::U</name>
    <filename>structrapidjson_1_1_generic_value_1_1_number_1_1_u.html</filename>
  </compound>
  <compound kind="struct">
    <name>rapidjson::UTF16</name>
    <filename>structrapidjson_1_1_u_t_f16.html</filename>
    <templarg>typename CharType</templarg>
  </compound>
  <compound kind="struct">
    <name>rapidjson::UTF16BE</name>
    <filename>structrapidjson_1_1_u_t_f16_b_e.html</filename>
    <templarg>typename CharType</templarg>
    <base>rapidjson::UTF16</base>
  </compound>
  <compound kind="struct">
    <name>rapidjson::UTF16LE</name>
    <filename>structrapidjson_1_1_u_t_f16_l_e.html</filename>
    <templarg>typename CharType</templarg>
    <base>rapidjson::UTF16</base>
  </compound>
  <compound kind="struct">
    <name>rapidjson::UTF32</name>
    <filename>structrapidjson_1_1_u_t_f32.html</filename>
    <templarg>typename CharType</templarg>
  </compound>
  <compound kind="struct">
    <name>rapidjson::UTF32BE</name>
    <filename>structrapidjson_1_1_u_t_f32_b_e.html</filename>
    <templarg>typename CharType</templarg>
    <base>rapidjson::UTF32</base>
  </compound>
  <compound kind="struct">
    <name>rapidjson::UTF32LE</name>
    <filename>structrapidjson_1_1_u_t_f32_l_e.html</filename>
    <templarg>typename CharType</templarg>
    <base>rapidjson::UTF32</base>
  </compound>
  <compound kind="struct">
    <name>rapidjson::UTF8</name>
    <filename>structrapidjson_1_1_u_t_f8.html</filename>
    <templarg>typename CharType</templarg>
  </compound>
  <compound kind="class">
    <name>rapidjson::Writer</name>
    <filename>classrapidjson_1_1_writer.html</filename>
    <templarg>typename OutputStream</templarg>
    <templarg>typename SourceEncoding</templarg>
    <templarg>typename TargetEncoding</templarg>
    <templarg>typename StackAllocator</templarg>
    <templarg>unsigned writeFlags</templarg>
    <class kind="struct">rapidjson::Writer::Level</class>
    <member kind="function">
      <type></type>
      <name>Writer</name>
      <anchorfile>classrapidjson_1_1_writer.html</anchorfile>
      <anchor>a98a421c806b456688874511f64add1f2</anchor>
      <arglist>(OutputStream &amp;os, StackAllocator *stackAllocator=0, size_t levelDepth=kDefaultLevelDepth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Reset</name>
      <anchorfile>classrapidjson_1_1_writer.html</anchorfile>
      <anchor>ac4026d3f14b80d6d7fc10004b1972722</anchor>
      <arglist>(OutputStream &amp;os)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsComplete</name>
      <anchorfile>classrapidjson_1_1_writer.html</anchorfile>
      <anchor>a190d964d3e62155e87153e858a0b04da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaxDecimalPlaces</name>
      <anchorfile>classrapidjson_1_1_writer.html</anchorfile>
      <anchor>aa7b6967dc237519e2a6d8b3939fb9634</anchor>
      <arglist>(int maxDecimalPlaces)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Double</name>
      <anchorfile>classrapidjson_1_1_writer.html</anchorfile>
      <anchor>aff66881798d01e932a0b8b8ef97b0373</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>String</name>
      <anchorfile>classrapidjson_1_1_writer.html</anchorfile>
      <anchor>a849e2b675a2b868699a14d45c7396f24</anchor>
      <arglist>(const Ch *const &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RawValue</name>
      <anchorfile>classrapidjson_1_1_writer.html</anchorfile>
      <anchor>a8acb89b2bbb1e5f384e6076b65044dbe</anchor>
      <arglist>(const Ch *json, size_t length, Type type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Flush</name>
      <anchorfile>classrapidjson_1_1_writer.html</anchorfile>
      <anchor>a72cefd18d176bc12a53adb3185c51ca7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Double</name>
      <anchorfile>classrapidjson_1_1_writer.html</anchorfile>
      <anchor>aff66881798d01e932a0b8b8ef97b0373</anchor>
      <arglist>(double d)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>rapidjson</name>
    <filename>namespacerapidjson.html</filename>
    <class kind="struct">rapidjson::ASCII</class>
    <class kind="struct">rapidjson::AutoUTF</class>
    <class kind="class">rapidjson::AutoUTFInputStream</class>
    <class kind="class">rapidjson::AutoUTFOutputStream</class>
    <class kind="struct">rapidjson::BaseReaderHandler</class>
    <class kind="class">rapidjson::BasicIStreamWrapper</class>
    <class kind="class">rapidjson::BasicOStreamWrapper</class>
    <class kind="class">rapidjson::CrtAllocator</class>
    <class kind="class">rapidjson::CursorStreamWrapper</class>
    <class kind="class">rapidjson::EncodedInputStream</class>
    <class kind="class">rapidjson::EncodedInputStream&lt; UTF8&lt;&gt;, MemoryStream &gt;</class>
    <class kind="class">rapidjson::EncodedOutputStream</class>
    <class kind="class">rapidjson::FileReadStream</class>
    <class kind="class">rapidjson::FileWriteStream</class>
    <class kind="class">rapidjson::GenericArray</class>
    <class kind="class">rapidjson::GenericDocument</class>
    <class kind="struct">rapidjson::GenericInsituStringStream</class>
    <class kind="class">rapidjson::GenericMember</class>
    <class kind="class">rapidjson::GenericMemberIterator</class>
    <class kind="struct">rapidjson::GenericMemoryBuffer</class>
    <class kind="class">rapidjson::GenericObject</class>
    <class kind="class">rapidjson::GenericPointer</class>
    <class kind="class">rapidjson::GenericReader</class>
    <class kind="class">rapidjson::GenericSchemaDocument</class>
    <class kind="class">rapidjson::GenericSchemaValidator</class>
    <class kind="class">rapidjson::GenericStreamWrapper</class>
    <class kind="class">rapidjson::GenericStringBuffer</class>
    <class kind="struct">rapidjson::GenericStringRef</class>
    <class kind="struct">rapidjson::GenericStringStream</class>
    <class kind="class">rapidjson::GenericUri</class>
    <class kind="class">rapidjson::GenericValue</class>
    <class kind="class">rapidjson::IGenericRemoteSchemaDocumentProvider</class>
    <class kind="class">rapidjson::MemoryPoolAllocator</class>
    <class kind="struct">rapidjson::MemoryStream</class>
    <class kind="struct">rapidjson::ParseResult</class>
    <class kind="class">rapidjson::PrettyWriter</class>
    <class kind="class">rapidjson::SchemaValidatingReader</class>
    <class kind="struct">rapidjson::Specification</class>
    <class kind="class">rapidjson::StdAllocator</class>
    <class kind="class">rapidjson::StdAllocator&lt; void, BaseAllocator &gt;</class>
    <class kind="struct">rapidjson::StreamTraits</class>
    <class kind="struct">rapidjson::StreamTraits&lt; GenericInsituStringStream&lt; Encoding &gt; &gt;</class>
    <class kind="struct">rapidjson::StreamTraits&lt; GenericStringStream&lt; Encoding &gt; &gt;</class>
    <class kind="struct">rapidjson::Transcoder</class>
    <class kind="struct">rapidjson::Transcoder&lt; Encoding, Encoding &gt;</class>
    <class kind="struct">rapidjson::UTF16</class>
    <class kind="struct">rapidjson::UTF16BE</class>
    <class kind="struct">rapidjson::UTF16LE</class>
    <class kind="struct">rapidjson::UTF32</class>
    <class kind="struct">rapidjson::UTF32BE</class>
    <class kind="struct">rapidjson::UTF32LE</class>
    <class kind="struct">rapidjson::UTF8</class>
    <class kind="class">rapidjson::Writer</class>
    <member kind="typedef">
      <type>unsigned</type>
      <name>SizeType</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a44eb33eaa523e36d466b1ced64b85c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericValue&lt; UTF8&lt;&gt; &gt;</type>
      <name>Value</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>aa65fc9fb381b2cbc54f98673eadd6505</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericDocument&lt; UTF8&lt;&gt; &gt;</type>
      <name>Document</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ace11b5b575baf1cccd5ba5f8586dcdc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const RAPIDJSON_ERROR_CHARTYPE *(*</type>
      <name>GetParseErrorFunc</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga71e87993751dbd0e3259d90194a265b3</anchor>
      <arglist>)(ParseErrorCode)</arglist>
    </member>
    <member kind="typedef">
      <type>const RAPIDJSON_ERROR_CHARTYPE *(*</type>
      <name>GetValidateErrorFunc</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gae6f45cf4e3ad85413823a368df05caed</anchor>
      <arglist>)(ValidateErrorCode)</arglist>
    </member>
    <member kind="typedef">
      <type>const RAPIDJSON_ERROR_CHARTYPE *(*</type>
      <name>GetSchemaErrorFunc</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga5d760d47c37dc058d90b18e699622bc6</anchor>
      <arglist>)(SchemaErrorCode)</arglist>
    </member>
    <member kind="typedef">
      <type>const RAPIDJSON_ERROR_CHARTYPE *(*</type>
      <name>GetPointerParseErrorFunc</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gac06b664281d2bf7b7892618eb1df440e</anchor>
      <arglist>)(PointerParseErrorCode)</arglist>
    </member>
    <member kind="typedef">
      <type>GenericStringStream&lt; UTF8&lt; char &gt; &gt;</type>
      <name>StringStream</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a021f77051e9f85188fc2f71ff5a15ebc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericInsituStringStream&lt; UTF8&lt; char &gt; &gt;</type>
      <name>InsituStringStream</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a64e957c8d9d7cd15b193ffc31410038e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericStringBuffer&lt; UTF8&lt; char &gt;, CrtAllocator &gt;</type>
      <name>StringBuffer</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ac0765ea91f41539645c4b78689d03f21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericReader&lt; UTF8&lt; char &gt;, UTF8&lt; char &gt;, CrtAllocator &gt;</type>
      <name>Reader</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ad5310edd1226f5b3ea82dc0d4d3740c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericPointer&lt; Value, CrtAllocator &gt;</type>
      <name>Pointer</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a080910f74d2f5046e6724280159cf374</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericSchemaDocument&lt; Value, CrtAllocator &gt;</type>
      <name>SchemaDocument</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a52bbb5d64d1319495089e1713a0653cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>IGenericRemoteSchemaDocumentProvider&lt; SchemaDocument &gt;</type>
      <name>IRemoteSchemaDocumentProvider</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>af91eb8eea47b79d75b23e29fa9c0abb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericUri&lt; Value &gt;</type>
      <name>Uri</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a922d31ccf019a901ec4039c4163216f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ae79a4751c1c460ff0de5ecc07874f3e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNullType</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ae79a4751c1c460ff0de5ecc07874f3e4a952871e4326b527154fc8aac1ac1f6ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kFalseType</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ae79a4751c1c460ff0de5ecc07874f3e4a9f2e7047832dce1029551b5de0f05607</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kTrueType</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ae79a4751c1c460ff0de5ecc07874f3e4a80d9f25b083abce45edbfdd3ba006c8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kObjectType</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ae79a4751c1c460ff0de5ecc07874f3e4acf030b422a32c3647c7c5973bd4dd0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kArrayType</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ae79a4751c1c460ff0de5ecc07874f3e4a058c622e1e7d59419ae58b895cbce468</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kStringType</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ae79a4751c1c460ff0de5ecc07874f3e4ad6379da3dc04b83a591992bfb9fabba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumberType</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ae79a4751c1c460ff0de5ecc07874f3e4abe572cb44ce198e467ccf9d63d50d82a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UTFType</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a4aacabc0f8cea1cd628f466d890773eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kUTF8</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a4aacabc0f8cea1cd628f466d890773eba3bda3a2e3f0ec2b7e8c5a3d5d4f60a81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kUTF16LE</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a4aacabc0f8cea1cd628f466d890773ebaa7ffda68d3584eb92155daf3cd1d6481</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kUTF16BE</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a4aacabc0f8cea1cd628f466d890773eba52c496755de96eee05275a423b36299d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kUTF32LE</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a4aacabc0f8cea1cd628f466d890773eba2ec8c855b2edacca40fa73ad307a66b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kUTF32BE</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a4aacabc0f8cea1cd628f466d890773ebad6db204b848081468878ed58bc20ce8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ParseErrorCode</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga7d3acf640886b1f2552dc8c4cd6dea60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorNone</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a86a60b723dca32df5debab2c3db4235f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorDocumentEmpty</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a06183076357ebd9eca228666f614c286</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorDocumentRootNotSingular</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a2022599bcd4f64d58885a026f95751d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorValueInvalid</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60ab7fa69bce0c393cf3a2b6065111f2f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorObjectMissName</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60ab707b848425668e765def25554735242</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorObjectMissColon</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a58e952084a0dfdbc5630f624252aef5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorObjectMissCommaOrCurlyBracket</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a2a81a684f39fc882ec99f07e86343f73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorArrayMissCommaOrSquareBracket</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a1a4ac97731f997e9591b40f98ecd9f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorStringUnicodeEscapeInvalidHex</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a23c38bf88b8448555c0eb41e1735bd92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorStringUnicodeSurrogateInvalid</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a636209a2e516fbdb4db5ad0a83a6b386</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorStringEscapeInvalid</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a8dd0af5e6103a6503c61c38cb2b0bab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorStringMissQuotationMark</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60af7daa91caa53abb881ea231a874a4f40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorStringInvalidEncoding</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a62ce0f5c74e4ab34ac325d2adda8fa8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorNumberTooBig</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a240cebadea89f7282ab263b5a22c9805</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorNumberMissFraction</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60ac840ece3ba6874fe6f16c01ebb71031f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorNumberMissExponent</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a28a1c720ae63560780ccd992dc999ab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorTermination</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60ab250f87c3d8454c579364b5a0f697a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseErrorUnspecificSyntaxError</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a7abf1a337294d984a3f4d18b5843fb24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ValidateErrorCode</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga633f43fd92e6ed5ceb87dbf570647847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrors</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a05469e37a2917fef9822eaf9e2dfd60e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorNone</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a569afaca49e48ee8bd928284409dcab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorMultipleOf</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847aa01437cd68a424643a8d9c12c1a3ff5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorMaximum</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a5338314546adf96b80b1da045478c89b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorExclusiveMaximum</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a88597e022ffccc312d5169a87dff6cff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorMinimum</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847ad365b8abebe4008652940df0a5add9c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorExclusiveMinimum</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a82c2d77ca5266afdbdbfef23df14696b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorMaxLength</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a6fea0335e9dbcd4bc86a4a7acd15cf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorMinLength</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847acb06559789b68cb387a9b9985016905e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorPattern</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847aef7f31586df8214ffc68309540d81a5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorMaxItems</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a0aa600c87a97fc3c75f51f99517cfdfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorMinItems</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847adbf02986e366165c0ef1d89697893802</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorUniqueItems</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847aebecfc4b0017d7ff7eeeb32a8c97b509</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorAdditionalItems</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847ac31340c34bc1e59d2b60318dfe665eeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorMaxProperties</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a79537e77683e3f1c89a4b6327a5f770e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorMinProperties</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a4b9fec15f21b43bbbd617469989c620f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorRequired</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a2d287b50e430269793dd82bb2ae91446</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorAdditionalProperties</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a553f149c39aa16541848b04442e1032b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorPatternProperties</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847ac6f7c8c63dd5ec2c838f34c49300e0a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorDependencies</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847ad9d2f317eae6e7a8f7eb3526a44c3962</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorEnum</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a6faf5d2c20183efadf523e10287fd7c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorType</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a7035a7fc3f6b3a51c91be264537fc504</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorOneOf</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a6e5e5914d33ee2a926362fb445343103</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorOneOfMatch</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847adc0a6461cdb08ae4e4d537774a7e8c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorAllOf</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847af47261845396dff12763a9be8c11f666</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorAnyOf</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847aaba92c1f6cbea5e14e5e8d8b86b042d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorNot</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a825119358f037a9d221d2f5735776429</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorReadOnly</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847ab6ec7f2cb68fad80313e18c9321f16dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateErrorWriteOnly</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847ac1b9221db6f10c37ae4387e0466cf2cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SchemaErrorCode</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga8efcca4c439aac247da3f5755adb8c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorNone</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12af99f04ad13eef96ceea6c6210427fbb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorStartUnknown</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12af62c5af2d53ebd8bc98083e53d7a0891</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorRefPlainName</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12afdcb71bf9a3c0e0cfae500f79c7da19e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorRefInvalid</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a31c97e8a545af0e5a37f682a44f8821d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorRefPointerInvalid</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a5c2d37d5f8481da7ce2a6ddbdcfe5c05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorRefUnknown</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a982d32a07b999deb354908b8cb3d8c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorRefCyclical</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a8a33f3318f28252f5f57e38e90d3e6ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorRefNoRemoteProvider</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a8140af5b354a88f1e1ff2502552c7801</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorRefNoRemoteSchema</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a4f908c7669b91e824a79306028c7ccb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorRegexInvalid</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a8ed7db917fc77245178d74b46c2b6e79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorSpecUnknown</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12aacda77d52bfa818b6bf182ec8af2f63f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorSpecUnsupported</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a82dbee4f4a91164c38fd61816abb14a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorSpecIllegal</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a6d81cddf8554e12d852a803faf262c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSchemaErrorReadOnlyAndWriteOnly</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a741834bdd111606d5f86ff4c67c60f39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PointerParseErrorCode</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gade540ee4cc2a416c23b8ee2c12393c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPointerParseErrorNone</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ggade540ee4cc2a416c23b8ee2c12393c7ba9094f236b2ec70c42f1ea91dffc1e39b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPointerParseErrorTokenMustBeginWithSolidus</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ggade540ee4cc2a416c23b8ee2c12393c7ba2f2f8b238e201b7d540e8914bbfd2bed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPointerParseErrorInvalidEscape</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ggade540ee4cc2a416c23b8ee2c12393c7ba907c9fe4e541b257513e3a18635379f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPointerParseErrorInvalidPercentEncoding</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ggade540ee4cc2a416c23b8ee2c12393c7ba29831a02b8ee23a05d552b47f4d64d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPointerParseErrorCharacterMustPercentEncode</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ggade540ee4cc2a416c23b8ee2c12393c7bae244a98f53279fda5a750f847b81c54f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrettyFormatOptions</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a084b31753ef2edefdeca8a5374eccc4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kFormatDefault</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a084b31753ef2edefdeca8a5374eccc4ba8164b0d4993439856171585b9cf3adc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kFormatSingleLineArray</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a084b31753ef2edefdeca8a5374eccc4ba64b0f8a37ab3125118682046ff06500f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ParseFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseNoFlags</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9af2c7fa21e9e7656e467bd71079ac8fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseInsituFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9a02748971d6ea0c5e22c69b8aa7f344ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseValidateEncodingFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9a3df81f75479da8e052393f92cbec394b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseIterativeFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9a7923686c8bdb7614699f1fb1bb615bb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseStopWhenDoneFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9af84c60868704433b80aa51a62e042bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseFullPrecisionFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9adf80892cdfa076b2d1a7dd9530e15cb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseCommentsFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9ab5d719b36aac626135d5d622d0d837c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseNumbersAsStringsFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9a13981c0b803803f59d7a01aef3dfc987</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseTrailingCommasFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9af8b8470221dbc6046a40ff31d758ceec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseNanAndInfFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9a857894ab51cafa62956e9c9f0dafc4d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseEscapedApostropheFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9a9d0cd4c136483497f32f4af366b12d63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParseDefaultFlags</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a81379eb4e94a0386d71d15fda882ebc9a5640cb00db7814b7f22be3683dda9835</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ValidateFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>abfd1e973a5f464025877decd4dd6ece5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateNoFlags</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>abfd1e973a5f464025877decd4dd6ece5a7f7a93daa1f8497fc89d8ac5a8083bde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateContinueOnErrorFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>abfd1e973a5f464025877decd4dd6ece5a740ba1fa42d2286fca81a631a0d96699</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateReadFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>abfd1e973a5f464025877decd4dd6ece5ac8b086cb7b46a25495f76477ff750f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateWriteFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>abfd1e973a5f464025877decd4dd6ece5a7062008688260fdf008a3671b453c44d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kValidateDefaultFlags</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>abfd1e973a5f464025877decd4dd6ece5aee88d74111644920cabddc20fe57eb7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SchemaDraft</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ad593e891572f80a32012edfc8a2548c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kDraftMin</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ad593e891572f80a32012edfc8a2548c9a6bcccf7c3697f5ec81c34ef3f60a24b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kDraftMax</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ad593e891572f80a32012edfc8a2548c9aa2d69dfb157d18d95fc8963310ac95af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>OpenApiVersion</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a71076324167878dd341eb3ef4d58d70d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kVersionMin</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a71076324167878dd341eb3ef4d58d70da7269a5f3df086384b44140e6548f1697</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kVersionMax</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a71076324167878dd341eb3ef4d58d70daf8c8f1c04430dfd2a58c1aa640b5852f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WriteFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ad28b1de6aee37e92fc31792dd6dd6b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kWriteNoFlags</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ad28b1de6aee37e92fc31792dd6dd6b19ae971aa1fc0ae64c8f3d2b47fd802846a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kWriteValidateEncodingFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ad28b1de6aee37e92fc31792dd6dd6b19ac1b5e17278b060e9e866df075c104c10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kWriteNanAndInfFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ad28b1de6aee37e92fc31792dd6dd6b19a3adbca1d31ad845ff4e9d742280cce39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kWriteNanAndInfNullFlag</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ad28b1de6aee37e92fc31792dd6dd6b19a56e9581293098afc0df0ebb15cd8f024</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kWriteDefaultFlags</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>ad28b1de6aee37e92fc31792dd6dd6b19a5b5ca665afdfa828a74ae5755c67a226</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>GenericStringRef&lt; CharType &gt;</type>
      <name>StringRef</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>aa6b9fd9f6aa49405a574c362ba9af6b5</anchor>
      <arglist>(const CharType *str)</arglist>
    </member>
    <member kind="function">
      <type>GenericStringRef&lt; CharType &gt;</type>
      <name>StringRef</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a578c51ab574a50a9c760b9da7c7562f2</anchor>
      <arglist>(const CharType *str, size_t length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PutUnsafe</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a0a774dcffe8ae07686f459ae017d2f20</anchor>
      <arglist>(Stream &amp;stream, typename Stream::Ch c)</arglist>
    </member>
    <member kind="function">
      <type>const RAPIDJSON_ERROR_CHARTYPE *</type>
      <name>GetParseError_En</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gae50ed9b35d538b82461145f07038fd0b</anchor>
      <arglist>(ParseErrorCode parseErrorCode)</arglist>
    </member>
    <member kind="function">
      <type>const RAPIDJSON_ERROR_CHARTYPE *</type>
      <name>GetValidateError_En</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga03c02e413cc5698d5e9907e2c3353da8</anchor>
      <arglist>(ValidateErrorCode validateErrorCode)</arglist>
    </member>
    <member kind="function">
      <type>const RAPIDJSON_ERROR_CHARTYPE *</type>
      <name>GetSchemaError_En</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga96a6d39d2f057b3817668b5c08ff6334</anchor>
      <arglist>(SchemaErrorCode schemaErrorCode)</arglist>
    </member>
    <member kind="function">
      <type>const RAPIDJSON_ERROR_CHARTYPE *</type>
      <name>GetPointerParseError_En</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gabdb9d0b641e66a7bce4c5d36855bde45</anchor>
      <arglist>(PointerParseErrorCode pointerParseErrorCode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PutN</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a1ac13bac5976fc06587e00fc0bcfb32a</anchor>
      <arglist>(FileWriteStream &amp;stream, char c, size_t n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PutN</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>aba27b0c8dcf724aa2b288a24fda0811b</anchor>
      <arglist>(MemoryBuffer &amp;memoryBuffer, char c, size_t n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SkipWhitespace</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a6efb0f4d2a6f81477a59718d42e9464a</anchor>
      <arglist>(InputStream &amp;is)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SkipWhitespace</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a3caa6f393c9940e6525d5f1c21ed9ea2</anchor>
      <arglist>(InsituStringStream &amp;is)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SkipWhitespace</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a791735c27e073a70d720c2775ddf9568</anchor>
      <arglist>(StringStream &amp;is)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PutReserve</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a820f77efccfbb749bd15fe4822d2c740</anchor>
      <arglist>(Stream &amp;stream, size_t count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PutN</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a1d49d2cab617858b53a1db23b1759f43</anchor>
      <arglist>(Stream &amp;stream, Ch c, size_t n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PutN</name>
      <anchorfile>namespacerapidjson.html</anchorfile>
      <anchor>a9d43be9c033dc49738b713fe6fbafecf</anchor>
      <arglist>(GenericStringBuffer&lt; UTF8&lt;&gt; &gt; &amp;stream, char c, size_t n)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>RAPIDJSON_CONFIG</name>
    <title>RapidJSON configuration</title>
    <filename>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_MAJOR_VERSION</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>gaf1ff1685be6cbebb5d4b2ab997776f45</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_MINOR_VERSION</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>gaf9125105c593a636a79f1c2d96835376</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_PATCH_VERSION</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>gaf967d31be43666ce7f53756d73bd1cdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_VERSION_STRING</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>gad283cfde97d9a32b7d8e8107b11f70a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_NAMESPACE</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga743a79d3af927391fe3eb5c979136899</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_HAS_STDSTRING</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga2f2eef0ee4477f3fe5874703a66e997f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_USE_MEMBERSMAP</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga87dc65109882910388121e1dba15038b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_NO_INT64DEFINE</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga7f4e50c35dae3b015390daa6d48ce23c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_ENDIAN</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>gaba2445f582142cf918e74c2d22d1aa07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_ALIGN</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga583915242504c7fdb36e826f02f76242</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_48BITPOINTER_OPTIMIZATION</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga93fb983f78208d12c822376e1ea6d185</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_SIMD</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga0ccf72f3ebc4b3306ab669f95ca5c64b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_NO_SIZETYPEDEFINE</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga250603aa9e2a12429b25ba0c8108ad4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_ASSERT</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>gabeba18d612187bad2ac62aed9276d47c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_LIKELY</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga5dc14176a9e71ace282404b0bcda57a1</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_UNLIKELY</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga6a2b1695c13e77ae425e3cbac980ccb5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_NOEXCEPT_ASSERT</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga2b2a0d9143aa4fb31205a85b34c43952</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_ALLOCATOR_DEFAULT_CHUNK_CAPACITY</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga860570d04d489be08b9835d2ec58bac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_DEFAULT_ALLOCATOR</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga04a88f0b2db9091006eb7fc6deb6077b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_DEFAULT_STACK_ALLOCATOR</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga1178cffff7c596922a5ed3fda30c5520</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_VALUE_DEFAULT_OBJECT_CAPACITY</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga5c88aa612939b592d15d3fc4bdf54272</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_VALUE_DEFAULT_ARRAY_CAPACITY</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga10ba0ee06d0ac2803d0f2290d46b19f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_PARSE_DEFAULT_FLAGS</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga77005e892e6601599beaf421b0395c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_VALIDATE_DEFAULT_FLAGS</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga8d06f2d50592811d2890b45243b8adcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_WRITE_DEFAULT_FLAGS</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g.html</anchorfile>
      <anchor>ga1975595e2f1dc20a2d4859f340ac88c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>RAPIDJSON_ERRORS</name>
    <title>RapidJSON error handling</title>
    <filename>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</filename>
    <class kind="struct">rapidjson::ParseResult</class>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_ERROR_CHARTYPE</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga7e4636fd48d0148f102b8a13f0539d8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_ERROR_STRING</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gabe2e1bd1349e5a7d6c1af78c05a98f0d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_PARSE_ERROR_NORETURN</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga7f8c4265b2edda78568ae3338aaf1461</anchor>
      <arglist>(parseErrorCode, offset)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RAPIDJSON_PARSE_ERROR</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gae3689840fa6e89a241313f33b602f865</anchor>
      <arglist>(parseErrorCode, offset)</arglist>
    </member>
    <member kind="typedef">
      <type>const RAPIDJSON_ERROR_CHARTYPE *(*</type>
      <name>rapidjson::GetParseErrorFunc</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga71e87993751dbd0e3259d90194a265b3</anchor>
      <arglist>)(ParseErrorCode)</arglist>
    </member>
    <member kind="typedef">
      <type>const RAPIDJSON_ERROR_CHARTYPE *(*</type>
      <name>rapidjson::GetValidateErrorFunc</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gae6f45cf4e3ad85413823a368df05caed</anchor>
      <arglist>)(ValidateErrorCode)</arglist>
    </member>
    <member kind="typedef">
      <type>const RAPIDJSON_ERROR_CHARTYPE *(*</type>
      <name>rapidjson::GetSchemaErrorFunc</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga5d760d47c37dc058d90b18e699622bc6</anchor>
      <arglist>)(SchemaErrorCode)</arglist>
    </member>
    <member kind="typedef">
      <type>const RAPIDJSON_ERROR_CHARTYPE *(*</type>
      <name>rapidjson::GetPointerParseErrorFunc</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gac06b664281d2bf7b7892618eb1df440e</anchor>
      <arglist>)(PointerParseErrorCode)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>rapidjson::ParseErrorCode</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga7d3acf640886b1f2552dc8c4cd6dea60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kParseErrorNone</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a86a60b723dca32df5debab2c3db4235f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kParseErrorDocumentEmpty</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a06183076357ebd9eca228666f614c286</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kParseErrorDocumentRootNotSingular</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a2022599bcd4f64d58885a026f95751d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kParseErrorValueInvalid</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60ab7fa69bce0c393cf3a2b6065111f2f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kParseErrorObjectMissName</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60ab707b848425668e765def25554735242</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kParseErrorObjectMissColon</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a58e952084a0dfdbc5630f624252aef5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kParseErrorObjectMissCommaOrCurlyBracket</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a2a81a684f39fc882ec99f07e86343f73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kParseErrorArrayMissCommaOrSquareBracket</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a1a4ac97731f997e9591b40f98ecd9f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kParseErrorStringUnicodeEscapeInvalidHex</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a23c38bf88b8448555c0eb41e1735bd92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kParseErrorStringUnicodeSurrogateInvalid</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a636209a2e516fbdb4db5ad0a83a6b386</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kParseErrorStringEscapeInvalid</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a8dd0af5e6103a6503c61c38cb2b0bab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kParseErrorStringMissQuotationMark</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60af7daa91caa53abb881ea231a874a4f40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kParseErrorStringInvalidEncoding</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a62ce0f5c74e4ab34ac325d2adda8fa8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kParseErrorNumberTooBig</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a240cebadea89f7282ab263b5a22c9805</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kParseErrorNumberMissFraction</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60ac840ece3ba6874fe6f16c01ebb71031f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kParseErrorNumberMissExponent</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a28a1c720ae63560780ccd992dc999ab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kParseErrorTermination</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60ab250f87c3d8454c579364b5a0f697a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kParseErrorUnspecificSyntaxError</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga7d3acf640886b1f2552dc8c4cd6dea60a7abf1a337294d984a3f4d18b5843fb24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>rapidjson::ValidateErrorCode</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga633f43fd92e6ed5ceb87dbf570647847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrors</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a05469e37a2917fef9822eaf9e2dfd60e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorNone</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a569afaca49e48ee8bd928284409dcab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorMultipleOf</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847aa01437cd68a424643a8d9c12c1a3ff5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorMaximum</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a5338314546adf96b80b1da045478c89b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorExclusiveMaximum</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a88597e022ffccc312d5169a87dff6cff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorMinimum</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847ad365b8abebe4008652940df0a5add9c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorExclusiveMinimum</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a82c2d77ca5266afdbdbfef23df14696b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorMaxLength</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a6fea0335e9dbcd4bc86a4a7acd15cf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorMinLength</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847acb06559789b68cb387a9b9985016905e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorPattern</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847aef7f31586df8214ffc68309540d81a5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorMaxItems</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a0aa600c87a97fc3c75f51f99517cfdfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorMinItems</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847adbf02986e366165c0ef1d89697893802</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorUniqueItems</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847aebecfc4b0017d7ff7eeeb32a8c97b509</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorAdditionalItems</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847ac31340c34bc1e59d2b60318dfe665eeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorMaxProperties</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a79537e77683e3f1c89a4b6327a5f770e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorMinProperties</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a4b9fec15f21b43bbbd617469989c620f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorRequired</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a2d287b50e430269793dd82bb2ae91446</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorAdditionalProperties</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a553f149c39aa16541848b04442e1032b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorPatternProperties</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847ac6f7c8c63dd5ec2c838f34c49300e0a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorDependencies</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847ad9d2f317eae6e7a8f7eb3526a44c3962</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorEnum</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a6faf5d2c20183efadf523e10287fd7c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorType</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a7035a7fc3f6b3a51c91be264537fc504</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorOneOf</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a6e5e5914d33ee2a926362fb445343103</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorOneOfMatch</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847adc0a6461cdb08ae4e4d537774a7e8c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorAllOf</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847af47261845396dff12763a9be8c11f666</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorAnyOf</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847aaba92c1f6cbea5e14e5e8d8b86b042d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorNot</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847a825119358f037a9d221d2f5735776429</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorReadOnly</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847ab6ec7f2cb68fad80313e18c9321f16dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kValidateErrorWriteOnly</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga633f43fd92e6ed5ceb87dbf570647847ac1b9221db6f10c37ae4387e0466cf2cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>rapidjson::SchemaErrorCode</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga8efcca4c439aac247da3f5755adb8c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kSchemaErrorNone</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12af99f04ad13eef96ceea6c6210427fbb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kSchemaErrorStartUnknown</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12af62c5af2d53ebd8bc98083e53d7a0891</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kSchemaErrorRefPlainName</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12afdcb71bf9a3c0e0cfae500f79c7da19e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kSchemaErrorRefInvalid</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a31c97e8a545af0e5a37f682a44f8821d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kSchemaErrorRefPointerInvalid</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a5c2d37d5f8481da7ce2a6ddbdcfe5c05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kSchemaErrorRefUnknown</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a982d32a07b999deb354908b8cb3d8c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kSchemaErrorRefCyclical</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a8a33f3318f28252f5f57e38e90d3e6ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kSchemaErrorRefNoRemoteProvider</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a8140af5b354a88f1e1ff2502552c7801</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kSchemaErrorRefNoRemoteSchema</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a4f908c7669b91e824a79306028c7ccb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kSchemaErrorRegexInvalid</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a8ed7db917fc77245178d74b46c2b6e79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kSchemaErrorSpecUnknown</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12aacda77d52bfa818b6bf182ec8af2f63f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kSchemaErrorSpecUnsupported</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a82dbee4f4a91164c38fd61816abb14a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kSchemaErrorSpecIllegal</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a6d81cddf8554e12d852a803faf262c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kSchemaErrorReadOnlyAndWriteOnly</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gga8efcca4c439aac247da3f5755adb8c12a741834bdd111606d5f86ff4c67c60f39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>rapidjson::PointerParseErrorCode</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gade540ee4cc2a416c23b8ee2c12393c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kPointerParseErrorNone</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ggade540ee4cc2a416c23b8ee2c12393c7ba9094f236b2ec70c42f1ea91dffc1e39b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kPointerParseErrorTokenMustBeginWithSolidus</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ggade540ee4cc2a416c23b8ee2c12393c7ba2f2f8b238e201b7d540e8914bbfd2bed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kPointerParseErrorInvalidEscape</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ggade540ee4cc2a416c23b8ee2c12393c7ba907c9fe4e541b257513e3a18635379f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kPointerParseErrorInvalidPercentEncoding</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ggade540ee4cc2a416c23b8ee2c12393c7ba29831a02b8ee23a05d552b47f4d64d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rapidjson::kPointerParseErrorCharacterMustPercentEncode</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ggade540ee4cc2a416c23b8ee2c12393c7bae244a98f53279fda5a750f847b81c54f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const RAPIDJSON_ERROR_CHARTYPE *</type>
      <name>rapidjson::GetParseError_En</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gae50ed9b35d538b82461145f07038fd0b</anchor>
      <arglist>(ParseErrorCode parseErrorCode)</arglist>
    </member>
    <member kind="function">
      <type>const RAPIDJSON_ERROR_CHARTYPE *</type>
      <name>rapidjson::GetValidateError_En</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga03c02e413cc5698d5e9907e2c3353da8</anchor>
      <arglist>(ValidateErrorCode validateErrorCode)</arglist>
    </member>
    <member kind="function">
      <type>const RAPIDJSON_ERROR_CHARTYPE *</type>
      <name>rapidjson::GetSchemaError_En</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>ga96a6d39d2f057b3817668b5c08ff6334</anchor>
      <arglist>(SchemaErrorCode schemaErrorCode)</arglist>
    </member>
    <member kind="function">
      <type>const RAPIDJSON_ERROR_CHARTYPE *</type>
      <name>rapidjson::GetPointerParseError_En</name>
      <anchorfile>group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s.html</anchorfile>
      <anchor>gabdb9d0b641e66a7bce4c5d36855bde45</anchor>
      <arglist>(PointerParseErrorCode pointerParseErrorCode)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>md__c_h_a_n_g_e_l_o_g</name>
    <title>Change Log</title>
    <filename>md__c_h_a_n_g_e_l_o_g.html</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_2features</name>
    <title>Features</title>
    <filename>md_doc_2features.html</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_2tutorial</name>
    <title>Tutorial</title>
    <filename>md_doc_2tutorial.html</filename>
    <docanchor file="md_doc_2tutorial.html" title="Value &amp; Document">ValueDocument</docanchor>
    <docanchor file="md_doc_2tutorial.html" title="Query Value">QueryValue</docanchor>
    <docanchor file="md_doc_2tutorial.html" title="Query Array">QueryArray</docanchor>
    <docanchor file="md_doc_2tutorial.html" title="Query Object">QueryObject</docanchor>
    <docanchor file="md_doc_2tutorial.html" title="Querying Number">QueryNumber</docanchor>
    <docanchor file="md_doc_2tutorial.html" title="Query String">QueryString</docanchor>
    <docanchor file="md_doc_2tutorial.html" title="Create/Modify Values">CreateModifyValues</docanchor>
    <docanchor file="md_doc_2tutorial.html" title="Change Value Type">ChangeValueType</docanchor>
    <docanchor file="md_doc_2tutorial.html" title="Move Semantics">MoveSemantics</docanchor>
    <docanchor file="md_doc_2tutorial.html" title="Move semantics and temporary values">TemporaryValues</docanchor>
    <docanchor file="md_doc_2tutorial.html" title="Create String">CreateString</docanchor>
    <docanchor file="md_doc_2tutorial.html" title="Modify Array">ModifyArray</docanchor>
    <docanchor file="md_doc_2tutorial.html" title="Modify Object">ModifyObject</docanchor>
    <docanchor file="md_doc_2tutorial.html" title="Deep Copy Value">DeepCopyValue</docanchor>
    <docanchor file="md_doc_2tutorial.html" title="Swap Values">SwapValues</docanchor>
    <docanchor file="md_doc_2tutorial.html" title="What&apos;s next">WhatsNext</docanchor>
  </compound>
  <compound kind="page">
    <name>md_doc_2pointer</name>
    <title>Pointer</title>
    <filename>md_doc_2pointer.html</filename>
    <docanchor file="md_doc_2pointer.html" title="JSON Pointer">JsonPointer</docanchor>
    <docanchor file="md_doc_2pointer.html" title="Basic Usage">BasicUsage</docanchor>
    <docanchor file="md_doc_2pointer.html" title="Helper Functions">HelperFunctions</docanchor>
    <docanchor file="md_doc_2pointer.html" title="Resolving Pointer">ResolvingPointer</docanchor>
    <docanchor file="md_doc_2pointer.html" title="Error Handling">ErrorHandling</docanchor>
    <docanchor file="md_doc_2pointer.html" title="URI Fragment Representation">URIFragment</docanchor>
    <docanchor file="md_doc_2pointer.html" title="User-Supplied Tokens">UserSuppliedTokens</docanchor>
  </compound>
  <compound kind="page">
    <name>md_doc_2stream</name>
    <title>Stream</title>
    <filename>md_doc_2stream.html</filename>
    <docanchor file="md_doc_2stream.html" title="Memory Streams">MemoryStreams</docanchor>
    <docanchor file="md_doc_2stream.html" title="StringStream (Input)">StringStream</docanchor>
    <docanchor file="md_doc_2stream.html" title="StringBuffer (Output)">StringBuffer</docanchor>
    <docanchor file="md_doc_2stream.html" title="File Streams">FileStreams</docanchor>
    <docanchor file="md_doc_2stream.html" title="FileReadStream (Input)">FileReadStream</docanchor>
    <docanchor file="md_doc_2stream.html" title="FileWriteStream (Output)">FileWriteStream</docanchor>
    <docanchor file="md_doc_2stream.html" title="iostream Wrapper">iostreamWrapper</docanchor>
    <docanchor file="md_doc_2stream.html" title="IStreamWrapper">IStreamWrapper</docanchor>
    <docanchor file="md_doc_2stream.html" title="OStreamWrapper">OStreamWrapper</docanchor>
    <docanchor file="md_doc_2stream.html" title="Encoded Streams">EncodedStreams</docanchor>
    <docanchor file="md_doc_2stream.html" title="EncodedInputStream">EncodedInputStream</docanchor>
    <docanchor file="md_doc_2stream.html" title="EncodedOutputStream">EncodedOutputStream</docanchor>
    <docanchor file="md_doc_2stream.html" title="AutoUTFInputStream">AutoUTFInputStream</docanchor>
    <docanchor file="md_doc_2stream.html" title="AutoUTFOutputStream">AutoUTFOutputStream</docanchor>
    <docanchor file="md_doc_2stream.html" title="Custom Stream">CustomStream</docanchor>
    <docanchor file="md_doc_2stream.html" title="Example: istream wrapper">ExampleIStreamWrapper</docanchor>
    <docanchor file="md_doc_2stream.html" title="Example: ostream wrapper">ExampleOStreamWrapper</docanchor>
    <docanchor file="md_doc_2stream.html" title="Summary">Summary</docanchor>
  </compound>
  <compound kind="page">
    <name>md_doc_2encoding</name>
    <title>Encoding</title>
    <filename>md_doc_2encoding.html</filename>
    <docanchor file="md_doc_2encoding.html" title="Unicode">Unicode</docanchor>
    <docanchor file="md_doc_2encoding.html" title="Unicode Transformation Format">UTF</docanchor>
    <docanchor file="md_doc_2encoding.html" title="Character Type">CharacterType</docanchor>
    <docanchor file="md_doc_2encoding.html" title="AutoUTF">AutoUTF</docanchor>
    <docanchor file="md_doc_2encoding.html" title="ASCII">ASCII</docanchor>
    <docanchor file="md_doc_2encoding.html" title="Validation &amp; Transcoding">ValidationTranscoding</docanchor>
    <docanchor file="md_doc_2encoding.html" title="Transcoder">Transcoder</docanchor>
  </compound>
  <compound kind="page">
    <name>md_doc_2dom</name>
    <title>DOM</title>
    <filename>md_doc_2dom.html</filename>
    <docanchor file="md_doc_2dom.html" title="Template">Template</docanchor>
    <docanchor file="md_doc_2dom.html" title="Encoding">Encoding</docanchor>
    <docanchor file="md_doc_2dom.html" title="Allocator">Allocator</docanchor>
    <docanchor file="md_doc_2dom.html" title="Parsing">Parsing</docanchor>
    <docanchor file="md_doc_2dom.html" title="Parse Error">ParseError</docanchor>
    <docanchor file="md_doc_2dom.html" title="In Situ Parsing">InSituParsing</docanchor>
    <docanchor file="md_doc_2dom.html" title="Transcoding and Validation">TranscodingAndValidation</docanchor>
    <docanchor file="md_doc_2dom.html" title="Techniques">Techniques</docanchor>
    <docanchor file="md_doc_2dom.html" title="User Buffer">UserBuffer</docanchor>
  </compound>
  <compound kind="page">
    <name>md_doc_2sax</name>
    <title>SAX</title>
    <filename>md_doc_2sax.html</filename>
    <docanchor file="md_doc_2sax.html" title="Reader">Reader</docanchor>
    <docanchor file="md_doc_2sax.html" title="Handler">Handler</docanchor>
    <docanchor file="md_doc_2sax.html" title="GenericReader">GenericReader</docanchor>
    <docanchor file="md_doc_2sax.html" title="Parsing">SaxParsing</docanchor>
    <docanchor file="md_doc_2sax.html" title="Token-by-Token Parsing">TokenByTokenParsing</docanchor>
    <docanchor file="md_doc_2sax.html" title="Writer">Writer</docanchor>
    <docanchor file="md_doc_2sax.html" title="Template">WriterTemplate</docanchor>
    <docanchor file="md_doc_2sax.html" title="PrettyWriter">PrettyWriter</docanchor>
    <docanchor file="md_doc_2sax.html" title="Completeness and Reset">CompletenessReset</docanchor>
    <docanchor file="md_doc_2sax.html" title="Techniques">SaxTechniques</docanchor>
    <docanchor file="md_doc_2sax.html" title="Parsing JSON to Custom Data Structure">CustomDataStructure</docanchor>
    <docanchor file="md_doc_2sax.html" title="Filtering of JSON">Filtering</docanchor>
  </compound>
  <compound kind="page">
    <name>md_doc_2schema</name>
    <title>Schema</title>
    <filename>md_doc_2schema.html</filename>
    <docanchor file="md_doc_2schema.html" title="Basic Usage">Basic</docanchor>
    <docanchor file="md_doc_2schema.html" title="Validation during parsing/serialization">Fused</docanchor>
    <docanchor file="md_doc_2schema.html" title="DOM parsing">DOM</docanchor>
    <docanchor file="md_doc_2schema.html" title="SAX parsing">SAX</docanchor>
    <docanchor file="md_doc_2schema.html" title="Serialization">Serialization</docanchor>
    <docanchor file="md_doc_2schema.html" title="Remote Schema">Remote</docanchor>
    <docanchor file="md_doc_2schema.html" title="Conformance">Conformance</docanchor>
    <docanchor file="md_doc_2schema.html" title="Regular Expression">Regex</docanchor>
    <docanchor file="md_doc_2schema.html" title="Performance">Performance</docanchor>
    <docanchor file="md_doc_2schema.html" title="Schema violation reporting">Reporting</docanchor>
    <docanchor file="md_doc_2schema.html" title="General provisions">ReportingGeneral</docanchor>
    <docanchor file="md_doc_2schema.html" title="Validation keywords for numbers">Numbers</docanchor>
    <docanchor file="md_doc_2schema.html" title="multipleOf">multipleof</docanchor>
    <docanchor file="md_doc_2schema.html" title="maximum">maximum</docanchor>
    <docanchor file="md_doc_2schema.html" title="minimum">minimum</docanchor>
    <docanchor file="md_doc_2schema.html" title="Validation keywords for strings">Strings</docanchor>
    <docanchor file="md_doc_2schema.html" title="maxLength">maxLength</docanchor>
    <docanchor file="md_doc_2schema.html" title="minLength">minLength</docanchor>
    <docanchor file="md_doc_2schema.html" title="pattern">pattern</docanchor>
    <docanchor file="md_doc_2schema.html" title="Validation keywords for arrays">Arrays</docanchor>
    <docanchor file="md_doc_2schema.html" title="additionalItems">additionalItems</docanchor>
    <docanchor file="md_doc_2schema.html" title="maxItems and minItems">maxItems-minItems</docanchor>
    <docanchor file="md_doc_2schema.html" title="uniqueItems">uniqueItems</docanchor>
    <docanchor file="md_doc_2schema.html" title="maxProperties and minProperties">maxProperties-minProperties</docanchor>
    <docanchor file="md_doc_2schema.html" title="required">required</docanchor>
    <docanchor file="md_doc_2schema.html" title="additionalProperties">additionalProperties</docanchor>
    <docanchor file="md_doc_2schema.html" title="dependencies">dependencies</docanchor>
    <docanchor file="md_doc_2schema.html" title="Validation keywords for any instance type">AnyTypes</docanchor>
    <docanchor file="md_doc_2schema.html" title="enum">enum</docanchor>
    <docanchor file="md_doc_2schema.html" title="type">type</docanchor>
    <docanchor file="md_doc_2schema.html" title="allOf, anyOf, and oneOf">allOf-anyOf-oneOf</docanchor>
    <docanchor file="md_doc_2schema.html" title="not">not</docanchor>
  </compound>
  <compound kind="page">
    <name>md_doc_2performance</name>
    <title>Performance</title>
    <filename>md_doc_2performance.html</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_2internals</name>
    <title>Internals</title>
    <filename>md_doc_2internals.html</filename>
    <docanchor file="md_doc_2internals.html" title="Architecture">Architecture</docanchor>
    <docanchor file="md_doc_2internals.html" title="Value">Value</docanchor>
    <docanchor file="md_doc_2internals.html" title="Data Layout">DataLayout</docanchor>
    <docanchor file="md_doc_2internals.html" title="Flags">Flags</docanchor>
    <docanchor file="md_doc_2internals.html" title="Short-String Optimization">ShortString</docanchor>
    <docanchor file="md_doc_2internals.html" title="Allocator">InternalAllocator</docanchor>
    <docanchor file="md_doc_2internals.html" title="MemoryPoolAllocator">MemoryPoolAllocator</docanchor>
    <docanchor file="md_doc_2internals.html" title="Parsing Optimization">ParsingOptimization</docanchor>
    <docanchor file="md_doc_2internals.html" title="Skip Whitespaces with SIMD">SkipwhitespaceWithSIMD</docanchor>
    <docanchor file="md_doc_2internals.html" title="Local Stream Copy">LocalStreamCopy</docanchor>
    <docanchor file="md_doc_2internals.html" title="Parsing to Double">ParsingDouble</docanchor>
    <docanchor file="md_doc_2internals.html" title="Generation Optimization">GenerationOptimization</docanchor>
    <docanchor file="md_doc_2internals.html" title="Integer-to-String conversion">itoa</docanchor>
    <docanchor file="md_doc_2internals.html" title="Double-to-String conversion">dtoa</docanchor>
    <docanchor file="md_doc_2internals.html" title="Parser">Parser</docanchor>
    <docanchor file="md_doc_2internals.html" title="Iterative Parser">IterativeParser</docanchor>
    <docanchor file="md_doc_2internals.html" title="Grammar">IterativeParserGrammar</docanchor>
    <docanchor file="md_doc_2internals.html" title="Parsing Table">IterativeParserParsingTable</docanchor>
    <docanchor file="md_doc_2internals.html" title="Implementation">IterativeParserImplementation</docanchor>
  </compound>
  <compound kind="page">
    <name>md_doc_2faq</name>
    <title>FAQ</title>
    <filename>md_doc_2faq.html</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>RapidJSON</title>
    <filename>index.html</filename>
    <docanchor file="index.html">md_readme</docanchor>
  </compound>
</tagfile>
